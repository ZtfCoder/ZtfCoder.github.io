import{_ as e,c as a,o as s,a4 as n}from"./chunks/framework.4sxKuair.js";const t="/assets/image-20221016125105179.CuZUc1vH.png",i="/assets/image-20221016125154617.D7dk1eDO.png",h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"main/c语言/clion.md","filePath":"main/c语言/clion.md","lastUpdated":1713751059000}'),c={name:"main/c语言/clion.md"},p=n(`<p>clion 是jb 家c/c++ 语言编辑器,</p><p>c 项目中只能有一个main 函数,不能像Java一样 实现单文件运行,但是可以在<code>CMakeLists.txt</code> 设置 main函数的项目名称,和运行文件,就可以实现 单文件运行</p><p>例如</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>add_executable(demo2 demo2.c)</span></span>
<span class="line"><span>add_executable(demo3 demo3.c)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这样,就可以实现 demo2 和demo3 都可以运行main 函数,但是这样从操作太繁琐,</p><p>可以安装一款插件实现自动化写入这个内容<a href="https://plugins.jetbrains.com/plugin/8352-c-c--single-file-execution" target="_blank" rel="noreferrer">C/C++ Single File Execution - CLion Plugin | Marketplace (jetbrains.com)</a></p><p>使用方法 :</p><ol><li>首先创建一个c 文件,然后右键选择</li></ol><p><img src="`+t+'" alt="image-20221016125105179"></p><p>添加完成后,再对<code>CMakeLists.txt</code> 文件右键</p><p><img src="'+i+'" alt="image-20221016125154617"></p><p>重新加载项目即可,再回到刚才的文件,就可以写main 函数运行了</p>',12),o=[p];function l(r,d,m,_,u,g){return s(),a("div",null,o)}const f=e(c,[["render",l]]);export{h as __pageData,f as default};
