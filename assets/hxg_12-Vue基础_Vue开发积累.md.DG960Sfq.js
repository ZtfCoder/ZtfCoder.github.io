import{_ as i,C as e,c as n,o as t,G as l,ag as p}from"./chunks/framework.CDhRSyRB.js";const g=JSON.parse('{"title":"01-数据库的基础知识","description":"","frontmatter":{"title":"01-数据库的基础知识","publish":false},"headers":[],"relativePath":"hxg/12-Vue基础/Vue开发积累.md","filePath":"hxg/12-Vue基础/Vue开发积累.md","lastUpdated":1725860495000}'),h={name:"hxg/12-Vue基础/Vue开发积累.md"};function r(k,s,c,o,d,u){const a=e("ArticleTopAd");return t(),n("div",null,[l(a),s[0]||(s[0]=p(`<h3 id="动态添加对象的属性" tabindex="-1">动态添加对象的属性 <a class="header-anchor" href="#动态添加对象的属性" aria-label="Permalink to &quot;动态添加对象的属性&quot;">​</a></h3><ul><li>Vue中，动态新增对象的属性时，不能直接添加。正确的做法是：Vue.set(obj,key,value)。参考链接：<a href="https://blog.csdn.net/tian361zyc/article/details/72909187" target="_blank" rel="noreferrer">#</a></li></ul><h3 id="判断一个checkbox是否被选中" tabindex="-1">判断一个checkbox是否被选中 <a class="header-anchor" href="#判断一个checkbox是否被选中" aria-label="Permalink to &quot;判断一个checkbox是否被选中&quot;">​</a></h3><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- v-model里的内容是变量，变量里的值可能是 true 后者 false --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;checkbox&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isSelected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 选中时，值为 true。未选中时，值为 false --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{isSelected}}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 选中时，显示文字。未选中时，隐藏文字 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isSelected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;haha&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="多个checkbox的全选和反选" tabindex="-1">多个checkbox的全选和反选 <a class="header-anchor" href="#多个checkbox的全选和反选" aria-label="Permalink to &quot;多个checkbox的全选和反选&quot;">​</a></h3><p>现在有多个checkbox的item在一个数组中，另外还有一个“全选”的checkbox按钮。</p><p><strong>点击全选按钮，让子item全部选中</strong>：</p><p>采用 watch 监听全选按钮，然后改变子item。</p><p><strong>当子item全部被选中时，触发全选按钮</strong>：</p><p>采用 computed 计算子item 的状态，存放到变量 allChecked 中，然后用 watch 监听 allChecked 的值。</p><p>参考链接：</p><ul><li><a href="https://segmentfault.com/q/1010000014514160/a-1020000014514452" target="_blank" rel="noreferrer">问Vue.js 如何在 data 里含数组的情况下，监听数组内指定属性的变化？</a></li></ul>`,12))])}const b=i(h,[["render",r]]);export{g as __pageData,b as default};
