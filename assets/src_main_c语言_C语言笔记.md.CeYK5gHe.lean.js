import{_ as a,c as n,o as l,a4 as i,l as s}from"./chunks/framework.4sxKuair.js";const o=JSON.parse('{"title":"C语言笔记","description":"","frontmatter":{},"headers":[],"relativePath":"src/main/c语言/C语言笔记.md","filePath":"src/main/c语言/C语言笔记.md","lastUpdated":1713751059000}'),h={name:"src/main/c语言/C语言笔记.md"},t=i("",82),p=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"优先级"),s("th",null,"运算符"),s("th",null,"结合律"),s("th")])]),s("tbody",null,[s("tr",null,[s("td",null,"1"),s("td",{列表:""},"后缀运算符：[]    ()    ·    ->    ++    --(类型名称)"),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"2"),s("td",null,"一元运算符：++ -- ! ~ -(负号运算符) * & sizeof_Alignof"),s("td",null,"从右到左"),s("td")]),s("tr",null,[s("td",null,"3"),s("td",null,"类型转换运算符：(类型名称)"),s("td",null,"从右到左"),s("td")]),s("tr",null,[s("td",null,"4"),s("td",null,"乘除法运算符：*    /    %"),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"5"),s("td",null,"加减法运算符：+    -"),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"6"),s("td",null,"移位运算符：<<    >>"),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"7"),s("td",null,"关系运算符：<<=    >>="),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"8"),s("td",null,"相等运算符：==    !="),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"9"),s("td",null,"位运算符 AND：&"),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"10"),s("td",null,"位运算符 XOR：^"),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"11"),s("td",null,"位运算符 OR："),s("td"),s("td",null,"从左到右")]),s("tr",null,[s("td",null,"12"),s("td",null,"逻辑运算符 AND：&&"),s("td",null,"从左到右"),s("td")]),s("tr",null,[s("td",null,"13"),s("td",null,"逻辑运算符 OR："),s("td"),s("td",null,"从左到右")]),s("tr",null,[s("td",null,"14"),s("td",null,"条件运算符：?:"),s("td",null,"从右到左"),s("td")]),s("tr",null,[s("td",null,"15"),s("td",null,"赋值运算符："),s("td"),s("td")]),s("tr",null,[s("td",null,"=         +=        -=       *=       /=      %=       &=       ^="),s("td",null,"="),s("td"),s("td")]),s("tr",null,[s("td",null,"<<=      >>="),s("td",null,"从右到左"),s("td"),s("td")]),s("tr",null,[s("td",null,"16"),s("td",null,"逗号运算符：，"),s("td",null,"从左到右"),s("td")])])],-1),k=i("",4),e=[t,p,k];function r(d,E,g,y,c,F){return l(),n("div",null,e)}const b=a(h,[["render",r]]);export{o as __pageData,b as default};
