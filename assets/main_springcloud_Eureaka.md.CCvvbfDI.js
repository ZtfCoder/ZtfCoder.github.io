import{_ as s,c as a,o as i,a5 as n}from"./chunks/framework.rSw690SR.js";const g=JSON.parse('{"title":"springcloud 注册中心(待更新)","description":"","frontmatter":{"title":"springcloud 注册中心(待更新)","tags":"springcloud","categories":"springcloud","abbrlink":"f46ad36e"},"headers":[],"relativePath":"main/springcloud/Eureaka.md","filePath":"main/springcloud/Eureaka.md","lastUpdated":1662368311000}'),e={name:"main/springcloud/Eureaka.md"},l=n(`<h1 id="eureaka-服务注册与发现" tabindex="-1">Eureaka (服务注册与发现) <a class="header-anchor" href="#eureaka-服务注册与发现" aria-label="Permalink to &quot;Eureaka (服务注册与发现)&quot;">​</a></h1><p>和 <code>zookpeer</code> 一样,可以做服务注册和发现,</p><p>我们可以把我们写好的服务注册到<code>Eureaka</code> 中, <code>Eureaka</code> 还可以帮我们监控各个服务的健康状态</p><p>有时候我们会看到以下警告信息，这个 Eureka web 页面输出的警告。默认情况下 Eureka Server 在 90s 内没有收到某个微服务实例的心跳，Euraka Server 将会注销该实例。但是当网络出现短暂分区故障，微服务与网络之间无法正常通信，Eureka Server 可能会注销无法正常通信的服务，导致服务不可用。</p><blockquote><p>THE SELF PRESERVATION MODE IS TURNED OFF.THIS MAY NOT PROTECT INSTANCE EXPIRY IN CASE OF NETWORK/OTHER PROBLEMS</p></blockquote><p>Euraka 通过“自我保护机制”来解决这个问题，当 Eureka Server 在短时间内丢失过多客户端时候，有可能是发生了网络分区故障，那么 Eureka Server 就会进入自我保护模式。一旦进入该模式 Eureka Server 就会保护服务注册表中的信息，不在删除。当网络故障恢复时，Eureka Server 会自动退出自我保护模式。默认开启自我保护，可以通过设置<code>eureka.server.enable-self-preservation=false</code>禁用自我保护模式</p><p>配置</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7001</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">springcloud-eureka-7001</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># eureka 配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">eureka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # eureka 服务端实例的名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">localhost</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 是否向 eureka 注册 选择false 是因为本身这个服务就是服务端</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    register-with-eureka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 为 false 则是声明是服务端</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    fetch-registry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 监控页面</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    service-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      defaultZone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://\${eureka.instance.hostname}:\${server.port}/eureka</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>还需要在启动类上添加注解<code>@EnableEurekaServer</code></p><p>我们的生产者 需要注册服务到 <code>eureaka</code> 那么需要 先导入我们的依赖</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.springframework.cloud&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;spring-cloud-starter-eureka&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.4.6.RELEASE&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>除此之外,我们还需要 在启动类上开启 开启<code>eureaka</code> 客户端 <code>@EnableEurekaClient</code></strong></p><p>在 <code>yml</code> 进行 客户端配置</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># eureka 注册当前服务</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">eureka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    service-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      defaultZone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:7001/eureka</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>启动成功后,我们可以访问 <code>http://localhost:7001</code></p><p><strong>与 zookpeer 区别</strong></p><p>RDBMS==&gt;（MySql,Oracle,SqlServer 等关系型数据库）遵循的原则是：ACID 原则（A：原子性。C：一致性。I：独立性。D：持久性。）。</p><p>NoSql==&gt; （redis,Mogodb 等非关系型数据库）遵循的原则是：CAP 原则（C：强一致性。A:可用性。P：分区容错性）</p><blockquote><p>在分布式领域有一个很著名的 CAP 定理：C：数据一致性。A：服务可用性。P：分区容错性（服务对网络分区故障的容错性）。</p><p>在这个特性中任何分布式系统只能保证两个。</p></blockquote><blockquote><p>Eureka 和 Zookeeper 就是 CAP 定理中的实现，Eureka（保证 AP），Zookeeper（保证 CP）。</p></blockquote>`,20),p=[l];function r(t,k,h,E,d,c){return i(),a("div",null,p)}const u=s(e,[["render",r]]);export{g as __pageData,u as default};
