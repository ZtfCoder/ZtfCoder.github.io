import{_ as e,C as p,c as t,o as r,G as h,j as i,ag as a,a as n}from"./chunks/framework.CDhRSyRB.js";const y=JSON.parse('{"title":"01-前端性能分析工具和指标","description":"","frontmatter":{"title":"01-前端性能分析工具和指标","publish":true},"headers":[],"relativePath":"hxg/14-前端性能优化/01-前端性能分析工具和指标.md","filePath":"hxg/14-前端性能优化/01-前端性能分析工具和指标.md","lastUpdated":1725860495000}'),o={name:"hxg/14-前端性能优化/01-前端性能分析工具和指标.md"};function k(g,s,d,m,u,E){const l=p("ArticleTopAd");return r(),t("div",null,[h(l),s[0]||(s[0]=i("h2",{id:"性能指标和优化目标之-加载",tabindex:"-1"},[n("性能指标和优化目标之：加载 "),i("a",{class:"header-anchor",href:"#性能指标和优化目标之-加载","aria-label":'Permalink to "性能指标和优化目标之：加载"'},"​")],-1)),s[1]||(s[1]=i("p",null,"性能指标：我们在性能优化过程中可以参考的标准。这些标准都是业界或者前人总结出来的指导性经验。我们可以参考这些指标，去指导我们自己的优化。",-1)),s[2]||(s[2]=i("h3",{id:"打开网站的初体验",tabindex:"-1"},[n("打开网站的初体验 "),i("a",{class:"header-anchor",href:"#打开网站的初体验","aria-label":'Permalink to "打开网站的初体验"'},"​")],-1)),s[3]||(s[3]=i("p",null,"我们以淘宝网站为例，按下F12打开浏览器的调试模式。",-1)),s[4]||(s[4]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115_1601.png",alt:"",onclick:"previewImage(this)"})],-1)),s[5]||(s[5]=i("p",null,"上图中，鼠标右键点击“刷新”图标（或者鼠标长按刷新图标，松开鼠标后），会弹出三个选项，我们选择最后一个选项“清空缓存并硬性重新加载”。",-1)),s[6]||(s[6]=i("p",null,"补充：这三个选项都是在调试模式下（按下F12弹出调试面板）才会出现的。",-1)),s[7]||(s[7]=i("p",null,"浏览器的DevTools初印象：",-1)),s[8]||(s[8]=i("p",null,[i("img",{src:"https://img.smyhvae.com/20210115_1617.png",alt:"",onclick:"previewImage(this)"})],-1)),s[9]||(s[9]=i("p",null,"上图中，打开 chrome 调试工具，点开「设置」icon，下面的四个选项中，除了“Group by frame”之外，其他的三个选项都可以勾选上。",-1)),s[10]||(s[10]=i("p",null,"我们可以看到淘宝网站的一些指标：",-1)),s[11]||(s[11]=i("ul",null,[i("li",null,"总资源量是 1.3M。"),i("li",null,"DOM加载完成时间（DOMContentLoaded）：511ms。这是一个很关键的指标。"),i("li",null,"其他资源的总加载时间是 1.05秒。")],-1)),s[12]||(s[12]=i("p",null,"我们再来对比一下京东的：",-1)),s[13]||(s[13]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-1357.png",alt:"",onclick:"previewImage(this)"})],-1)),s[14]||(s[14]=i("h3",{id:"保存快照",tabindex:"-1"},[n("保存快照 "),i("a",{class:"header-anchor",href:"#保存快照","aria-label":'Permalink to "保存快照"'},"​")],-1)),s[15]||(s[15]=i("p",null,"network里的信息挺多，我们可以将其保存下来，留着以后做分析、做对照。",-1)),s[16]||(s[16]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-1723.png",alt:"",onclick:"previewImage(this)"})],-1)),s[17]||(s[17]=a("",5)),s[18]||(s[18]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-1733.png",alt:"",onclick:"previewImage(this)"})],-1)),s[19]||(s[19]=i("h3",{id:"瀑布图-waterfall",tabindex:"-1"},[n("瀑布图 Waterfall "),i("a",{class:"header-anchor",href:"#瀑布图-waterfall","aria-label":'Permalink to "瀑布图 Waterfall"'},"​")],-1)),s[20]||(s[20]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115_1618.png",alt:"",onclick:"previewImage(this)"})],-1)),s[21]||(s[21]=i("p",null,"瀑布图可以非常直观地把网站的加载过程，用自上而下的方式表达出来，就像瀑布一样。",-1)),s[22]||(s[22]=i("p",null,"瀑布图有两中解读方式：一种是横向看，一种是纵向看。",-1)),s[23]||(s[23]=i("p",null,[i("strong",null,"1、横向看"),n("：")],-1)),s[24]||(s[24]=i("p",null,"横向看的是具体的资源，每一行代表某个资源的加载信息。里面有一些色块来表达加载的过程，每个块的颜色不同。也就是说资源的下载不是单一的过程，而是经历了很多环节。",-1)),s[25]||(s[25]=i("p",null,"为了了解资源的具体加载过程，我们把鼠标悬浮在第一个资源的色块上，可以看见一个详情列表：",-1)),s[26]||(s[26]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115_1632.png",alt:"",onclick:"previewImage(this)"})],-1)),s[27]||(s[27]=a("",21)),s[28]||(s[28]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210107_2115.gif",alt:"",onclick:"previewImage(this)"})],-1)),s[29]||(s[29]=i("p",null,"持续滑动的过程中，如果页面输出到显示器的帧率低于60帧/秒，则人眼会感觉卡顿。",-1)),s[30]||(s[30]=i("p",null,[n("那么，在浏览器中如何实时显示内容的 FPS 参数呢？打开浏览器的控制台后，按住快捷键「Cmd + Shift + P」，然后输入 "),i("code",null,"frame"),n("，选择"),i("code",null,"Show frames per second（FPS） meter"),n("。如下：")],-1)),s[31]||(s[31]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-1930.png",alt:"",onclick:"previewImage(this)"})],-1)),s[32]||(s[32]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2146.png",alt:"",onclick:"previewImage(this)"})],-1)),s[33]||(s[33]=i("p",null,[i("strong",null,"温馨提示"),n("：")],-1)),s[34]||(s[34]=i("p",null,[n("从 2020年7月起，chrome 官方已经取消了 fps参数的显示，改为了 "),i("a",{href:"https://twitter.com/addyosmani/status/1281483292026400768",target:"_blank",rel:"noreferrer"},"FRS"),n("：")],-1)),s[35]||(s[35]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2006.png",alt:"",onclick:"previewImage(this)"})],-1)),s[36]||(s[36]=i("p",null,"FRS参数观察的是丢帧率：",-1)),s[37]||(s[37]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2010.png",alt:"",onclick:"previewImage(this)"})],-1)),s[38]||(s[38]=a("",7)),s[39]||(s[39]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2027.png",alt:"",onclick:"previewImage(this)"})],-1)),s[40]||(s[40]=a("",10)),s[41]||(s[41]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2039.png",alt:"",onclick:"previewImage(this)"})],-1)),s[42]||(s[42]=a("",25)),s[43]||(s[43]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-0946.png",alt:"",onclick:"previewImage(this)"})],-1)),s[44]||(s[44]=i("p",null,"可以把size从到小排序，看看哪个资源的文件较大。",-1)),s[45]||(s[45]=i("p",null,"另外，上图中的横线处说明：该文件在网络传输的时候会做压缩（125kb），拿到资源之后再解压还原（526kb）。",-1)),s[46]||(s[46]=i("h3",{id:"performance-性能表现",tabindex:"-1"},[n("performance：性能表现 "),i("a",{class:"header-anchor",href:"#performance-性能表现","aria-label":'Permalink to "performance：性能表现"'},"​")],-1)),s[47]||(s[47]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-0959.png",alt:"",onclick:"previewImage(this)"})],-1)),s[48]||(s[48]=a("",7)),s[49]||(s[49]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-1014.png",alt:"",onclick:"previewImage(this)"})],-1)),s[50]||(s[50]=a("",6)),s[51]||(s[51]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-1023.png",alt:"",onclick:"previewImage(this)"})],-1)),s[52]||(s[52]=i("p",null,"模拟网络状况（自定义参数）：",-1)),s[53]||(s[53]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-1026.png",alt:"",onclick:"previewImage(this)"})],-1)),s[54]||(s[54]=i("h3",{id:"performance-monitor",tabindex:"-1"},[n("Performance monitor "),i("a",{class:"header-anchor",href:"#performance-monitor","aria-label":'Permalink to "Performance monitor"'},"​")],-1)),s[55]||(s[55]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-1032.png",alt:"",onclick:"previewImage(this)"})],-1)),s[56]||(s[56]=i("h3",{id:"快捷键esc",tabindex:"-1"},[n("快捷键ESC "),i("a",{class:"header-anchor",href:"#快捷键esc","aria-label":'Permalink to "快捷键ESC"'},"​")],-1)),s[57]||(s[57]=i("p",null,"按住快捷键ESC，会列出其他常用的功能菜单：",-1)),s[58]||(s[58]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-1028.png",alt:"",onclick:"previewImage(this)"})],-1)),s[59]||(s[59]=i("h2",{id:"使用lighthouse分析性能",tabindex:"-1"},[n("使用LightHouse分析性能 "),i("a",{class:"header-anchor",href:"#使用lighthouse分析性能","aria-label":'Permalink to "使用LightHouse分析性能"'},"​")],-1)),s[60]||(s[60]=i("p",null,"我们之所以使用不同的性能测量工具，是因为他们都有不同的特点。这一段要讲的 lighthouse 既可以帮我们生成简易的测试报告，还可以给出一些针对性的优化建议。后面要讲的 WebPageTest 可以帮我们生成详细的性能测试报告。",-1)),s[61]||(s[61]=i("p",null,"我们先来看看 Lighthouse。",-1)),s[62]||(s[62]=i("h3",{id:"lighthouse-介绍",tabindex:"-1"},[n("Lighthouse 介绍 "),i("a",{class:"header-anchor",href:"#lighthouse-介绍","aria-label":'Permalink to "Lighthouse 介绍"'},"​")],-1)),s[63]||(s[63]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-1739.png",alt:"",onclick:"previewImage(this)"})],-1)),s[64]||(s[64]=i("p",null,"lighthouse 是 chrome 浏览器的一个性能测量工具。我们先来看看它的性能指标，至于它具体使用，后续的内容再详细介绍。",-1)),s[65]||(s[65]=i("p",null,"淘宝跑分举例：",-1)),s[66]||(s[66]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-1758.png",alt:"",onclick:"previewImage(this)"})],-1)),s[67]||(s[67]=i("p",null,"京东跑分举例：",-1)),s[68]||(s[68]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-1759.png",alt:"",onclick:"previewImage(this)"})],-1)),s[69]||(s[69]=a("",10)),s[70]||(s[70]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116_0107.png",alt:"",onclick:"previewImage(this)"})],-1)),s[71]||(s[71]=i("p",null,"上图中给出了一个优化建议：有些JS文件不是首屏加载必须的。",-1)),s[72]||(s[72]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116_0108.png",alt:"",onclick:"previewImage(this)"})],-1)),s[73]||(s[73]=i("p",null,"我们随便拿一个JS文件来测试（比如上图中，Header标签里的JS文件）。做法如下：",-1)),s[74]||(s[74]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-0901.png",alt:"",onclick:"previewImage(this)"})],-1)),s[75]||(s[75]=i("p",null,[n("如上图所示，在 chrome 控制台输入快捷键「Cmd + Shift + P」，然后输入文本"),i("code",null,"block"),n("，选择"),i("code",null,"Show Network request blocking"),n("：")],-1)),s[76]||(s[76]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-0903.png",alt:"",onclick:"previewImage(this)"})],-1)),s[77]||(s[77]=i("p",null,"按照上面的步骤添加规则，点击add后，效果如下：",-1)),s[78]||(s[78]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-0904.png",alt:"",onclick:"previewImage(this)"})],-1)),s[79]||(s[79]=i("p",null,"然后，我们切换到控制台的 network面板，并刷新页面：",-1)),s[80]||(s[80]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116-0905.png",alt:"",onclick:"previewImage(this)"})],-1)),s[81]||(s[81]=a("",9)),s[82]||(s[82]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2203.png",alt:"",onclick:"previewImage(this)"})],-1)),s[83]||(s[83]=i("p",null,"WebPageTest 在世界各地提供了非常多的服务器，在每个服务器上部署了不同的浏览器，可以让我们有针对性的做测试。如果你做的是一款国际化网站，那更有必要使用一下了。",-1)),s[84]||(s[84]=i("p",null,"我们以JD网站举例：",-1)),s[85]||(s[85]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2225.png",alt:"",onclick:"previewImage(this)"})],-1)),s[86]||(s[86]=i("p",null,"按照上面的选项配置完成后，点击右侧的「Start Test」即可开始测试。然后等待：",-1)),s[87]||(s[87]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2226.png",alt:"",onclick:"previewImage(this)"})],-1)),s[88]||(s[88]=a("",6)),s[89]||(s[89]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116_1314.png",alt:"",onclick:"previewImage(this)"})],-1)),s[90]||(s[90]=i("p",null,"1、摘要里的参数：（如上图）",-1)),s[91]||(s[91]=i("ul",null,[i("li",null,"First Byte：第一个请求的响应时间。可以反映后台的处理能力，以及网络回路的情况。"),i("li",null,"Start Render：从白屏到首次渲染的时间。"),i("li",null,"Speed Index：速度指数。"),i("li",null,[i("strong",null,"Total Blocking Time"),n("：页面被阻塞，导致用户不能交互的累计时间。")])],-1)),s[92]||(s[92]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116_1315.png",alt:"",onclick:"previewImage(this)"})],-1)),s[93]||(s[93]=i("p",null,[n("2、详情里的参数："),i("strong",null,"First View"),n("。")],-1)),s[94]||(s[94]=i("p",null,"First View展示的是：首次访问时，总的加载时间。这里面提供的瀑布图，比 chrome DevTools里提供的更为详细。",-1)),s[95]||(s[95]=i("p",null,"点击进入 First View 的详情之后，可以看到：所有的资源请求，都会在这里列出来。如下：",-1)),s[96]||(s[96]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116_1316.png",alt:"",onclick:"previewImage(this)"})],-1)),s[97]||(s[97]=i("ul",null,[i("li",null,"page is Interactive：页面在加载的过程中，大部分时间段，用户都是可以交互的。这是非常有用的一个指标。"),i("li",null,"Brower Main thread：浏览器主线程的占用情况。可以看看空闲的时间多不多。"),i("li",null,"CPU Utilization：CPU的使用情况。"),i("li",null,"多张图片的资源请求。")],-1)),s[98]||(s[98]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210116_1317.png",alt:"",onclick:"previewImage(this)"})],-1)),s[99]||(s[99]=i("p",null,[n("上图中，我们可以看到：多张图片的开始请求时间都是相同的。也就是说，如果让资源做"),i("strong",null,"并行加载"),n("，我们就可以加大地减少加载时间，"),i("strong",null,"最终所消耗的时间就由最大的图片来决定"),n("。这是一个很好的优化技巧，至于具体是怎么实现的，可以自行了解。")],-1)),s[100]||(s[100]=i("p",null,"另外，我们看到，有一部分的请求，被高亮出来了：",-1)),s[101]||(s[101]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210115-2250.png",alt:"",onclick:"previewImage(this)"})],-1)),s[102]||(s[102]=a("",34)),s[103]||(s[103]=i("p",null,[i("img",{src:"http://img.smyhvae.com/20210117_1635.png",alt:"",onclick:"previewImage(this)"})],-1)),s[104]||(s[104]=i("p",null,"做曝光上报的埋点：判断某个DOM（或者某个楼层）是否出现在视窗中，出现了就收集数据上报给服务端。",-1)),s[105]||(s[105]=i("p",null,"本质就是要计算某一元素和另一元素（视窗）的相对位置/相对可视状态，然后进行一些操作（一般是上报给服务端）。",-1)),s[106]||(s[106]=i("p",null,"参考：",-1)),s[107]||(s[107]=i("ul",null,[i("li",null,[i("a",{href:"https://cnodejs.org/topic/5e0a0edb0696c446bf650dec",target:"_blank",rel:"noreferrer"},"前端埋点之曝光实现")]),i("li",null,[i("a",{href:"https://github.com/Hugohui/vueTrackSdk",target:"_blank",rel:"noreferrer"},"点击埋点和曝光卖点的封装")])],-1))])}const v=e(o,[["render",k]]);export{y as __pageData,v as default};
