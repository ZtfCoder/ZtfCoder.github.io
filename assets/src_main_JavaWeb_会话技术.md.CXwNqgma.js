import{_ as s,c as a,o as n,a5 as i}from"./chunks/framework.Cq-rJsvL.js";const u=JSON.parse('{"title":"会话技术","description":"","frontmatter":{"title":"会话技术","tags":["javaweb","java","cookie&session"],"categories":"JavaWeb","abbrlink":"2f22fa59"},"headers":[],"relativePath":"src/main/JavaWeb/会话技术.md","filePath":"src/main/JavaWeb/会话技术.md","lastUpdated":1701252050000}'),e={name:"src/main/JavaWeb/会话技术.md"},p=i(`<h1 id="cookie会话技术" tabindex="-1">Cookie会话技术 <a class="header-anchor" href="#cookie会话技术" aria-label="Permalink to &quot;Cookie会话技术&quot;">​</a></h1><p>一次会话中包含多次请求和响应</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>一次会话:浏览器第一次给服务器资源发送请求,会话建立,直到有一方断开为止</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><p><strong>在一次会话的范围内的多次请求间,共享数据</strong></p><h2 id="方式" tabindex="-1">方式 <a class="header-anchor" href="#方式" aria-label="Permalink to &quot;方式&quot;">​</a></h2><h3 id="cookie" tabindex="-1">Cookie <a class="header-anchor" href="#cookie" aria-label="Permalink to &quot;Cookie&quot;">​</a></h3><h4 id="客户端会话技术" tabindex="-1">客户端会话技术 <a class="header-anchor" href="#客户端会话技术" aria-label="Permalink to &quot;客户端会话技术&quot;">​</a></h4><div class="language-Java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.创建Cookie对象,绑定数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String name,String value)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.发送Cookie对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addCookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cookie cookie)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3.获取Cookie,拿到数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h4><div class="language-Java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">基于set_cookie和请求头cookie实现</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="细节" tabindex="-1"><strong>细节</strong> <a class="header-anchor" href="#细节" aria-label="Permalink to &quot;**细节**&quot;">​</a></h4><p>1.可以一次发送多个cookie</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>创建多个Cookie对象,使用response调用调用多次addCookie方法</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.设置保存时间</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>默认值:当浏览器关闭后,Cookie数据被销毁</span></span>
<span class="line"><span>持久化:</span></span>
<span class="line"><span>	setMaxAge(int seconds)</span></span>
<span class="line"><span>	1.正数:将Cookie数据写到硬盘的文件中,持久化存储,cookie存活时间</span></span>
<span class="line"><span>	2.负数:默认值</span></span>
<span class="line"><span>	3.零:删除cookie信息</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>3.存储中文</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>在tomcat8 之前cookie不支持中文存储</span></span>
<span class="line"><span>	需要使用URL编码</span></span>
<span class="line"><span>	URLEncoder.encode(转码字符串,&quot;utf-8&quot;)</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	获取值,同样需要解码</span></span>
<span class="line"><span>	URLDecoder.decode(&quot;解码字符串&quot;,&quot;utf-8&quot;)</span></span>
<span class="line"><span>	//注意:特殊字符最好使用URL编码</span></span>
<span class="line"><span>tomcat8 之后支持中文存储</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>4.获取范围</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>默认情况是只能共享在同一个项目下的cookie</span></span>
<span class="line"><span></span></span>
<span class="line"><span>可以设置范围来进行不同项目下的共享</span></span>
<span class="line"><span>setPath(String path)</span></span>
<span class="line"><span>设置为&quot;/&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>5.cookie值</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>尽量不要使用空格等特殊字符</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h1 id="session" tabindex="-1">Session <a class="header-anchor" href="#session" aria-label="Permalink to &quot;Session&quot;">​</a></h1><p>服务端会话技术</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>在一次会话的多次请求将共享数据,将数据保存在服务器端的对象中 HttpSession</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><strong>使用</strong> <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;**使用**&quot;">​</a></h2><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">获取HttpSession对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HttpSession session </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//有点类似与共享数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">使用对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String name, Object obj) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//存储数据 name:存储数据的名字 obj:存储对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Object </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String name) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//根据存储数据的名字来获取存储数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String name) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//通过名字来移除存储数据</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="原理" tabindex="-1"><strong>原理</strong> <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;**原理**&quot;">​</a></h2><p>Session的实现是依赖于Cookie的</p><h2 id="其他" tabindex="-1"><strong>其他</strong> <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;**其他**&quot;">​</a></h2><p><strong>1.当客户端关闭后,服务器不关闭,2次获取session是否是同一个</strong></p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">默认情况下</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 不是</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">如果需要,则可以创建一个Cookie 键为JSESSIONID 值就是之前的值,调用get方法,获取值,设置存活时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cookie c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JSESSIONID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>2.客户端不关闭,服务器关闭后,2此获取的session是同一个吗?</strong></p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">不是同一个对象,但是为了确保数据不丢失,tomcat自动设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	1.session钝化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		在服务器正常关闭之前,将session对象系列化到硬盘上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		(类似序列化)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	2.session活化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		在服务器启动后,将session文件转化成内存中的session对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		(类似反序列化)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//注意 idea 无法实现活化功能,因为idea会在项目部署的时候,替换掉原来的文件,因此session文件被删除了</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>3.session销毁时间</strong></p><div class="language-Java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.服务器关闭</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">session对象调用invalidate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()方法时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">session默认失效时间30分钟</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(可以去配置文件里修改)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>4.session的特点</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.session用于存储一次会话的多次请求的数据,存在服务器端</span></span>
<span class="line"><span>2.session可以存储任意类型,任意大小的数据</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h1 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-label="Permalink to &quot;区别&quot;">​</a></h1><p>1.session存储数据在服务器端,cookie在客户端</p><p>2.session没有数据大小的限制,cookie有</p><p>3.session数据安全,cookie相对不安全</p>`,42),l=[p];function t(r,h,o,d,c,k){return n(),a("div",null,l)}const g=s(e,[["render",t]]);export{u as __pageData,g as default};
