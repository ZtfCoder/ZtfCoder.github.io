import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.1baa841b.js";const b=JSON.parse('{"title":"vue 入门-cli","description":"","frontmatter":{"title":"vue 入门-cli","tags":["vue","前端"],"categories":"vue","abbrlink":"7ee75e14"},"headers":[],"relativePath":"main/vue/vue-cli.md","filePath":"main/vue/vue-cli.md","lastUpdated":1699426983000}'),l={name:"main/vue/vue-cli.md"},e=p(`<p>终于要看到<code>npm</code>这个玩意了</p><h2 id="node-js" tabindex="-1">node.js <a class="header-anchor" href="#node-js" aria-label="Permalink to &quot;node.js&quot;">​</a></h2><p>首先安装 <code>node.js</code></p><p><a href="http://nodejs.cn/download/" target="_blank" rel="noreferrer">http://nodejs.cn/download/</a></p><p>很简单,无脑下一步就好了</p><p>安装成功后,用cmd 测试下命令 <code>npm</code> <code>npm-v</code></p><p>完成后,需要安装,一些组件,包,淘宝镜像</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install cnpm </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">g</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install cnpm </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>之后,我们使用<code>cnpm</code> 命令来安装一些组件</p><h2 id="安装-vue-cli" tabindex="-1">安装 vue-cli <a class="header-anchor" href="#安装-vue-cli" aria-label="Permalink to &quot;安装 vue-cli&quot;">​</a></h2><p>在<code>cmd</code> 窗口输入</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">cnpm install vue</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">cli </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">g</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">cnpm install vue</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cli </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>初始化了后,会出现很多文件,其中,<code>package.json</code> 这个就相当于是<code>maven</code> 等下,我们需要去加载它的依赖</p><p>进入到我们初始化后的文件中,打开<code>cmd</code> 输入</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>它会去加载所需要的依赖,和环境</p><p>如果安装最后出现</p><p><img src="https://images.wupeiyao.top/notes/20210509192224.png" alt="image-20210112170455100"></p><p>出现错误,我们根据npm的提示,输入 它提示的信息,进行修复就可以了</p><h2 id="安装webpack" tabindex="-1">安装webpack <a class="header-anchor" href="#安装webpack" aria-label="Permalink to &quot;安装webpack&quot;">​</a></h2><p>webpack 是前端的项目构建工具,类似maven打包工具</p><p>我们需要安装webpack</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install webpack </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">npm install webpack</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">cli </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">g</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install webpack </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">npm install webpack</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cli </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="补充知识es6" tabindex="-1">补充知识ES6 <a class="header-anchor" href="#补充知识es6" aria-label="Permalink to &quot;补充知识ES6&quot;">​</a></h3><p><strong>hello.js</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//暴露 这个方法 </span></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">sayHi</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (){</span></span>
<span class="line"><span style="color:#E1E4E8;">    document.</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//exports 暴露某个方法或者变量,以便其他地方能够导入</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//暴露 这个方法 </span></span>
<span class="line"><span style="color:#005CC5;">exports</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">sayHi</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (){</span></span>
<span class="line"><span style="color:#24292E;">    document.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//exports 暴露某个方法或者变量,以便其他地方能够导入</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>main.js</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//接收导入的东西,相当于是引入了一个类的对象,我们可以通过这个对象,调用内部暴露的方法</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> re </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./hello&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">re.</span><span style="color:#B392F0;">sayHi</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//接收导入的东西,相当于是引入了一个类的对象,我们可以通过这个对象,调用内部暴露的方法</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> re </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./hello&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">re.</span><span style="color:#6F42C1;">sayHi</span><span style="color:#24292E;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>最后我们写一个配置的js<code>webpack.config.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    entry:</span><span style="color:#9ECBFF;">&#39;./modules/main.js&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    output:{</span></span>
<span class="line"><span style="color:#E1E4E8;">        filename:</span><span style="color:#9ECBFF;">&quot;./js/bundle.js&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#6A737D;">//打包的路径</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    entry:</span><span style="color:#032F62;">&#39;./modules/main.js&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    output:{</span></span>
<span class="line"><span style="color:#24292E;">        filename:</span><span style="color:#032F62;">&quot;./js/bundle.js&quot;</span><span style="color:#24292E;">,</span><span style="color:#6A737D;">//打包的路径</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>之后,打开<code>cmd</code> 输入</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">webpack</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">webpack</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>最后,我们只需要在index.html,导入我们打包好的文件就行了</p><p>关于<code>import</code> 这个和python导包很相似,相同理解就好了,只是,导入进来的是一个对象,并且这个对象的名称由自己决定</p><p>比如</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> VueRouter </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue-router&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> VueRouter </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue-router&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="vue-router" tabindex="-1">vue-router <a class="header-anchor" href="#vue-router" aria-label="Permalink to &quot;vue-router&quot;">​</a></h2><h3 id="安装-vue-router" tabindex="-1">安装 vue-router <a class="header-anchor" href="#安装-vue-router" aria-label="Permalink to &quot;安装 vue-router&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install vue</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">router </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install vue</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">router </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="导入路由" tabindex="-1">导入路由 <a class="header-anchor" href="#导入路由" aria-label="Permalink to &quot;导入路由&quot;">​</a></h3><p>一般单独建立一个js文件来进行路由的配置</p><p>首先要导入路由,接着导入vue,因为,我们需要又vue来安装路由</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//导入路由</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> VueRouter </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue-router&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//导入vue</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//导入路由</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> VueRouter </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue-router&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//导入vue</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="安装路由" tabindex="-1">安装路由 <a class="header-anchor" href="#安装路由" aria-label="Permalink to &quot;安装路由&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//安装路由</span></span>
<span class="line"><span style="color:#E1E4E8;">Vue.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(VueRouter);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//安装路由</span></span>
<span class="line"><span style="color:#24292E;">Vue.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(VueRouter);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="配置路由" tabindex="-1">配置路由 <a class="header-anchor" href="#配置路由" aria-label="Permalink to &quot;配置路由&quot;">​</a></h3><p><code>index.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//配置 导出路由</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VueRouter</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  routes:[</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      path:</span><span style="color:#9ECBFF;">&quot;/component1&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#6A737D;">//路由地址</span></span>
<span class="line"><span style="color:#E1E4E8;">      name:</span><span style="color:#9ECBFF;">&quot;component1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//给路由配置个名字</span></span>
<span class="line"><span style="color:#E1E4E8;">      component:component1 </span><span style="color:#6A737D;">//组件</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      path:</span><span style="color:#9ECBFF;">&quot;/component2&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#6A737D;">//路由地址</span></span>
<span class="line"><span style="color:#E1E4E8;">      name:</span><span style="color:#9ECBFF;">&quot;component2&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//给路由配置个名字</span></span>
<span class="line"><span style="color:#E1E4E8;">      component:component2 </span><span style="color:#6A737D;">//组件</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//配置 导出路由</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VueRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  routes:[</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      path:</span><span style="color:#032F62;">&quot;/component1&quot;</span><span style="color:#24292E;">,</span><span style="color:#6A737D;">//路由地址</span></span>
<span class="line"><span style="color:#24292E;">      name:</span><span style="color:#032F62;">&quot;component1&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//给路由配置个名字</span></span>
<span class="line"><span style="color:#24292E;">      component:component1 </span><span style="color:#6A737D;">//组件</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      path:</span><span style="color:#032F62;">&quot;/component2&quot;</span><span style="color:#24292E;">,</span><span style="color:#6A737D;">//路由地址</span></span>
<span class="line"><span style="color:#24292E;">      name:</span><span style="color:#032F62;">&quot;component2&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//给路由配置个名字</span></span>
<span class="line"><span style="color:#24292E;">      component:component2 </span><span style="color:#6A737D;">//组件</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>我们肯定是要导出该路由组件的,因此需要导出它的配置</p><p>path 就和requestMapping 差不多,相当于前端能够自由的跳转</p></blockquote><p>配置好<code>index.js</code> 后 我们去<code>main.js</code> 让它去扫描我们的<code>index.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> router </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./router&#39;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//自动扫描里面的子路由配置</span></span>
<span class="line"><span style="color:#6A737D;">//只需要导入,index.js所在的文件夹就行了,它会自动帮我们去扫描的</span></span>
<span class="line"><span style="color:#E1E4E8;">最后在main.js的vue对象中启动路由</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> router </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./router&#39;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">//自动扫描里面的子路由配置</span></span>
<span class="line"><span style="color:#6A737D;">//只需要导入,index.js所在的文件夹就行了,它会自动帮我们去扫描的</span></span>
<span class="line"><span style="color:#24292E;">最后在main.js的vue对象中启动路由</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="启动路由" tabindex="-1">启动路由 <a class="header-anchor" href="#启动路由" aria-label="Permalink to &quot;启动路由&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Vue </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> App </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./App&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> router </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./router&#39;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//自动扫描里面的子路由配置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Vue</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  el: </span><span style="color:#9ECBFF;">&#39;#app&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//配置路由,启动路由</span></span>
<span class="line"><span style="color:#E1E4E8;">  router,</span></span>
<span class="line"><span style="color:#E1E4E8;">  components: { App },</span></span>
<span class="line"><span style="color:#E1E4E8;">  template: </span><span style="color:#9ECBFF;">&#39;&lt;App/&gt;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Vue </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> App </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./App&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> router </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./router&#39;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">//自动扫描里面的子路由配置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Vue</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  el: </span><span style="color:#032F62;">&#39;#app&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//配置路由,启动路由</span></span>
<span class="line"><span style="color:#24292E;">  router,</span></span>
<span class="line"><span style="color:#24292E;">  components: { App },</span></span>
<span class="line"><span style="color:#24292E;">  template: </span><span style="color:#032F62;">&#39;&lt;App/&gt;&#39;</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>使用的话,使用 <code>to=&quot;component1&quot;</code> 相当于是href 属性</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">router-link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;component1&quot;</span><span style="color:#E1E4E8;">&gt;组件1&lt;/</span><span style="color:#79B8FF;">router-link</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">router-link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;component2&quot;</span><span style="color:#E1E4E8;">&gt;组件2&lt;/</span><span style="color:#79B8FF;">router-link</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">router-view</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#79B8FF;">router-view</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">router-link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;component1&quot;</span><span style="color:#24292E;">&gt;组件1&lt;/</span><span style="color:#005CC5;">router-link</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">router-link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;component2&quot;</span><span style="color:#24292E;">&gt;组件2&lt;/</span><span style="color:#005CC5;">router-link</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">router-view</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#005CC5;">router-view</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在方法中跳转路由</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$router.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/main&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//这样就可以跳转到/mian 这个页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 有时候需要传递参数</span></span>
<span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$router.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({ name: </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">, params: { userId: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;"> }})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$router.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/main&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//这样就可以跳转到/mian 这个页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 有时候需要传递参数</span></span>
<span class="line"><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$router.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({ name: </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">, params: { userId: </span><span style="color:#005CC5;">123</span><span style="color:#24292E;"> }})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="创建一个小工程" tabindex="-1">创建一个小工程 <a class="header-anchor" href="#创建一个小工程" aria-label="Permalink to &quot;创建一个小工程&quot;">​</a></h4><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#首先安装vue 标准项目</span></span>
<span class="line"><span style="color:#E1E4E8;">vue init webpack 项目名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 进入生成出来的项目文件夹</span></span>
<span class="line"><span style="color:#E1E4E8;">cd 项目名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 安装vue</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">router</span></span>
<span class="line"><span style="color:#E1E4E8;">npm install vue</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">router </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 安装element</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">ui</span></span>
<span class="line"><span style="color:#E1E4E8;">npm i element</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">ui </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">S</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 安装依赖</span></span>
<span class="line"><span style="color:#E1E4E8;">npm install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 安装SASS加载器</span></span>
<span class="line"><span style="color:#E1E4E8;">cnpm install sass</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">loader node</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">sass </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span>
<span class="line"><span style="color:#E1E4E8;"># 有可能之后会报错,原因有时候是sass版本太高,修改sass 版本 </span><span style="color:#9ECBFF;">&quot;^7.3.1&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 运行vue项目</span></span>
<span class="line"><span style="color:#E1E4E8;">npm run dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">说明</span></span>
<span class="line"><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save 的意思是将该模块安装到项目目录下,并在package 文件中的dependencies 节点写入依赖 </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">S 是</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save 命令的缩写</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev 的意思是将该模块安装到项目目录下,并在package 文件中的devDependencies 节点写入依赖</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">D 是</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev 命令的缩写</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#首先安装vue 标准项目</span></span>
<span class="line"><span style="color:#24292E;">vue init webpack 项目名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 进入生成出来的项目文件夹</span></span>
<span class="line"><span style="color:#24292E;">cd 项目名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 安装vue</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">router</span></span>
<span class="line"><span style="color:#24292E;">npm install vue</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">router </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 安装element</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">ui</span></span>
<span class="line"><span style="color:#24292E;">npm i element</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">ui </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">S</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 安装依赖</span></span>
<span class="line"><span style="color:#24292E;">npm install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 安装SASS加载器</span></span>
<span class="line"><span style="color:#24292E;">cnpm install sass</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">loader node</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">sass </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span>
<span class="line"><span style="color:#24292E;"># 有可能之后会报错,原因有时候是sass版本太高,修改sass 版本 </span><span style="color:#032F62;">&quot;^7.3.1&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 运行vue项目</span></span>
<span class="line"><span style="color:#24292E;">npm run dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">说明</span></span>
<span class="line"><span style="color:#D73A49;">--</span><span style="color:#24292E;">save 的意思是将该模块安装到项目目录下,并在package 文件中的dependencies 节点写入依赖 </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">S 是</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save 命令的缩写</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev 的意思是将该模块安装到项目目录下,并在package 文件中的devDependencies 节点写入依赖</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">D 是</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev 命令的缩写</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="关于vue-router" tabindex="-1">关于vue-router <a class="header-anchor" href="#关于vue-router" aria-label="Permalink to &quot;关于vue-router&quot;">​</a></h3><p>查看文档 <a href="https://router.vuejs.org/zh" target="_blank" rel="noreferrer">https://router.vuejs.org/zh</a></p><h2 id="refs" tabindex="-1">$refs <a class="header-anchor" href="#refs" aria-label="Permalink to &quot;$refs&quot;">​</a></h2><p>使用</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">el-form</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;dynamicValidateForm1&quot;</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">el-form</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 用法一</span></span>
<span class="line"><span style="color:#E1E4E8;">this.$refs[组件中 ref 声明的名称] </span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">这样就可以获取ref 声明的对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 用法二</span></span>
<span class="line"><span style="color:#E1E4E8;">this.$refs.ref 声明的名称</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">el-form</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;dynamicValidateForm1&quot;</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">el-form</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 用法一</span></span>
<span class="line"><span style="color:#24292E;">this.$refs[组件中 ref 声明的名称] </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">这样就可以获取ref 声明的对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 用法二</span></span>
<span class="line"><span style="color:#24292E;">this.$refs.ref 声明的名称</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,64),o=[e];function c(r,t,i,E,y,u){return n(),a("div",null,o)}const m=s(l,[["render",c]]);export{b as __pageData,m as default};
