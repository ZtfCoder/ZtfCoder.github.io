import{_ as p,c as l,G as t,a2 as i,j as a,a as e,B as h,o as r}from"./chunks/framework.sGs2IBkb.js";const v=JSON.parse('{"title":"03-Node.js开发环境安装","description":"","frontmatter":{"title":"03-Node.js开发环境安装","publish":true},"headers":[],"relativePath":"hxg/11-Node.js/03-Node.js开发环境安装.md","filePath":"hxg/11-Node.js/03-Node.js开发环境安装.md","lastUpdated":1725860495000}'),d={name:"hxg/11-Node.js/03-Node.js开发环境安装.md"};function o(k,s,c,g,b,m){const n=h("ArticleTopAd");return r(),l("div",null,[t(n),s[0]||(s[0]=i('<h2 id="node-js-版本常识" tabindex="-1">Node.js 版本常识 <a class="header-anchor" href="#node-js-版本常识" aria-label="Permalink to &quot;Node.js 版本常识&quot;">​</a></h2><ul><li><p>偶数版本为稳定版（0.6.x ，8.10.x）</p></li><li><p>奇数版本为非稳定版（0.7.x ，9.11.x）</p></li><li><p>LTS（Long Term Support）</p></li></ul><p>参考链接：<a href="https://blog.csdn.net/u012532033/article/details/73332099" target="_blank" rel="noreferrer">node.js 中 LTS 和 Current 的区别</a></p><h2 id="node-js-运行环境配置-通过-node-js-安装包-不推荐" tabindex="-1">Node.js 运行环境配置：通过 Node.js 安装包（不推荐） <a class="header-anchor" href="#node-js-运行环境配置-通过-node-js-安装包-不推荐" aria-label="Permalink to &quot;Node.js 运行环境配置：通过 Node.js 安装包（不推荐）&quot;">​</a></h2><p>去 Node.js 的<a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">官网</a>下载安装包：</p>',5)),s[1]||(s[1]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180301_1505.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180301_1505.png')"})],-1)),s[2]||(s[2]=a("p",null,[e("我们也可以在"),a("a",{href:"https://nodejs.org/en/download/releases/",target:"_blank",rel:"noreferrer"},"https://nodejs.org/en/download/releases/"),e(" 里下载历史版本。")],-1)),s[3]||(s[3]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180301_1507.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180301_1507.png')"})],-1)),s[4]||(s[4]=i('<p>注意，我们以一定要用偶数版（V4、V6 等)，不要用奇数版（比如 V5），因为奇数版不稳定。</p><p>后续如果需要安装其他版本，可以这样做：重新下载最新的安装包，覆盖安装即可。</p><p>但我们并不推荐直接采用 Node.js.msi（windows）或者 Node.js.pkg（Mac） 安装包进行安装，因为会产生如下问题。</p><p><strong>通过 Node.js 安装包产生的问题</strong>：</p><ul><li><p>安装新版本时，需要覆盖就版本；而且以前版本安装的很多全局工具包，需要重新安装。</p></li><li><p>无法回滚到之前的旧版本。</p></li><li><p>无法在多个版本之间切换（很多时候，不同的项目需要使用特定版本。或者，我想临时尝鲜一下新版本的特性）</p></li></ul><p>因此，我们暂时先不用安装 Node.js，稍后用 NVM 的方式来安装 Node.js。通过 NVM 的方式，可以让多个版本的 Node.js 共存，并灵活切换。</p><h2 id="node-js-运行环境安装-通过-nvm-推荐" tabindex="-1">Node.js 运行环境安装：通过 NVM（推荐） <a class="header-anchor" href="#node-js-运行环境安装-通过-nvm-推荐" aria-label="Permalink to &quot;Node.js 运行环境安装：通过 NVM（推荐）&quot;">​</a></h2><p><strong><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">NVM</a></strong>：node.js version manager，用来管理 node 的版本。</p><p><strong>我们可以先安装 NVM，然后通过 NVM 安装 Node.js</strong>。这是官方推荐的做法。</p><p>Windows 和 Mac 下安装的 Node.js 的步骤如下。</p><h3 id="windows-系统安装-node-js" tabindex="-1">Windows 系统安装 Node.js <a class="header-anchor" href="#windows-系统安装-node-js" aria-label="Permalink to &quot;Windows 系统安装 Node.js&quot;">​</a></h3><p><strong>1、安装 NVM</strong>：</p><p>（1）我们去 <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">https://github.com/coreybutler/nvm-windows/releases</a> 下载 NVM 的安装包：</p>',13)),s[5]||(s[5]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180301_1603.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180301_1603.png')"})],-1)),s[6]||(s[6]=a("p",null,[e("下载下来后，直接解压到 "),a("code",null,"D:\\web"),e("目录下：")],-1)),s[7]||(s[7]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180301_1610.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180301_1610.png')"})],-1)),s[8]||(s[8]=i(`<p>（2）在上面的目录中，新建一个<code>settings.txt</code>文件，里面的内容填充如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">vm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">odejs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arch:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proxy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上方内容的解释：</p><ul><li><p>root 配置为：当前 nvm.exe 所在的目录</p></li><li><p>path 配置为：node 快捷方式所在的目录</p></li><li><p>arch 配置为：当前操作系统的位数（32/64）</p></li><li><p>proxy 不用配置</p></li></ul><p>（3）配置环境变量：</p><ul><li><p><code>NVM_HOME</code> = <code>D:\\web\\nvm</code>（当前 nvm.exe 所在目录）</p></li><li><p><code>NVM_SYMLINK</code> = <code>D:\\web\\nodejs</code> （node 快捷方式所在的目录）</p></li><li><p>PATH += <code>;%NVM_HOME%;%NVM_SYMLINK%</code></p></li></ul><p>配置成功后，重启资源管理器。</p><p><strong>2、验证：</strong>(在 cmd 命令行中输入命令)</p><p>（1）输入<code>nvm</code>命令查看环境变量是否配置成功：</p>`,9)),s[9]||(s[9]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180301_1645.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180301_1645.png')"})],-1)),s[10]||(s[10]=i(`<p>（2）输入 <code>nvm ls</code>，查看已安装的所有 node 版本。</p><p>（3）输入 <code>nvm -v</code>，查看 已安装的 nvm 版本。</p><p>（4）输入 <code>node -v</code>，查看正在使用的 node 版本。</p><p>如果 Node 安装失败，可以参考上面这个链接。</p><p><strong>3、安装指定版本的 Node.js</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 版本号</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装举例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12.20.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用该版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12.20.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>输入 <code>node -v</code>，查看当前使用的 node 版本。</p><p>关于 NVM 的常用命令，详见下一段。</p><p>补充：</p><p>如果 Node 安装失败，可以在上方的 <code>settings.txt</code>文件中，新增如下两行，修改镜像源：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node_mirror: https://npm.taobao.org/mirrors/node/</span></span>
<span class="line"><span>npm_mirror: https://npm.taobao.org/mirrors/npm/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>参考链接：<a href="https://segmentfault.com/a/1190000011114680" target="_blank" rel="noreferrer">安装 npm，nvm，node</a></li></ul><h3 id="mac-系统安装-node-js" tabindex="-1">Mac 系统安装 Node.js <a class="header-anchor" href="#mac-系统安装-node-js" aria-label="Permalink to &quot;Mac 系统安装 Node.js&quot;">​</a></h3><p><strong>1、安装 <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">NVM</a></strong>：</p><p>（1）打开 终端.app，输入：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装成功的界面：</p>`,17)),s[11]||(s[11]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_2126.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_2126.png')"})],-1)),s[12]||(s[12]=i('<p>完成后，nvm 就被安装在了<code>~/.nvm</code>下。我们可以点开 home目录，然后按快捷键「Cmd + Shift + .」，看看 <code>.nvm</code>这个文件夹在不在。</p><p>问题1、如果安装时提示 <code>Failed to connect to raw.githubusercontent.com port 443: Connection refused</code>。解决办法：我们直接访问 <a href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh</a> ，将安装文件保存到本地，然后<code>bash install.sh</code> 执行这个本地文件，即可安装成功。</p><p>问题2、如果发现安装失败：</p>',3)),s[13]||(s[13]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_2111.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_2111.png')"})],-1)),s[14]||(s[14]=i(`<p>原因：Xcode 软件进行过更新。解决办法：打开 Xcode 软件，同意相关内容即可。</p><p>（2）配置环境变量：</p><p>编辑器打开<code>~/.bash_profile</code>文件，如果不会就在命令行输入<code>open ~/.bash_profile</code>。</p><p>（补充：如果你的 Mac 电脑里找不到<code>~/.bash_profile</code>文件，那就找找有没有<code>~/.profile</code>文件，或者<code>~/.bashrc</code>文件，或者<code>~/.zshrc</code>文件。如果还是没有，那你就手动创建一个<code>~/.bash_profile</code>文件）。</p><p>在最后一行输入：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.nvm&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # This loads nvm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果你发现文件中已经存在了上面这行代码，就不用往里面加了。这一步的作用是每次新打开一个 bash，nvm 都会被自动添加到环境变量中。</p><p>最后，输入 <code>source ~/.bash_profile</code>重启环境变量的配置。</p><p>PS：NVM 现在已经不支持 Homebrew 的方式来安装了。</p><p>参考链接：<a href="https://www.jianshu.com/p/a3f8778bc0a1" target="_blank" rel="noreferrer">https://www.jianshu.com/p/a3f8778bc0a1</a></p><p>参考链接：<a href="https://blog.csdn.net/science_Lee/article/details/79214127" target="_blank" rel="noreferrer">https://blog.csdn.net/science_Lee/article/details/79214127</a></p><p><strong>2、验证：</strong>(在 终端命令行中输入命令)</p><p>（1）输入 <code>nvm</code> 命令查看环境变量是否配置成功。</p><p>（2）输入 <code>nvm ls</code>，查看已安装的所有 node 版本。</p><p>（3）输入 <code>nvm -v</code>，查看 已安装的 nvm 版本。</p><p>（4）输入 <code>node -v</code>，查看正在使用的 node 版本。</p><p><strong>3、安装指定版本的 Node.js</strong>：</p><p>和 Windows 下一样，也是执行如下命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 版本号</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 举例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12.18.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>网速有点慢，要稍等。</p>`,20)),s[15]||(s[15]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_2148.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_2148.png')"})],-1)),s[16]||(s[16]=i(`<p>输入 <code>node -v</code>，查看当前使用的 node 版本。</p><p>安装好 <code>Node</code> 之后，<code>npm</code> 也会自动安装的，输入 <code>npm -v</code>，查看 npm 的版本。</p><p>关于 NVM 的常用命令，详见下一段。</p><p><strong>4、让 <code>.bash_profile</code> 环境变量永久生效</strong>：</p><p>在 <code>~/.bash_profile</code> 中配置好环境变量后，发现每次重启终端后，配置都会失效，需要重新执行 <code>source ~/.bash_profile</code> 命令。</p><p>原因是，zsh加载的是 <code>~/.zshrc</code>文件，而 <code>.zshrc</code> 文件中并没有定义任务环境变量。</p><p>解决办法：打开 <code>~/.zshrc</code> 文件，在文件的末尾，添加如下内容即可：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bash_profile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="nvm-的常用命令" tabindex="-1">NVM 的常用命令 <a class="header-anchor" href="#nvm-的常用命令" aria-label="Permalink to &quot;NVM 的常用命令&quot;">​</a></h2><blockquote><p>注意，这一段说的是 NVM 的常用命令，不是 Node 的常用命令。</p></blockquote><p>查看当前使用的 nvm 版本：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看本地安装的所有的 Node.js 版本：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方式1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方式2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>安装指定版本的 Node.js：</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 版本号</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 举例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8.10.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>卸载指定版本 Node.js：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 版本号</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>切换使用指定版本的 node</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 版本号</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>设置node的默认版本</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 版本号</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>查看全局npm包的安装路径</strong>：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm root -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看远程服务器端的所有 Node 版本：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls-remote</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行上面的命令后，在列出的版本清单中，凡是用 <code>Latest LTS</code>标注的版本，则表明是<strong>长期维护</strong>的版本。我们在安装时，建议安装这些版本。当然，我们也可以在网址 <a href="https://nodejs.org/en/download/releases/" target="_blank" rel="noreferrer">https://nodejs.org/en/download/releases/</a> 查看 LTS 的历史版本。</p><h2 id="node-js-的常用命令" tabindex="-1">Node.js 的常用命令 <a class="header-anchor" href="#node-js-的常用命令" aria-label="Permalink to &quot;Node.js 的常用命令&quot;">​</a></h2><p>查看 node 的版本：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行脚本字符串：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;console.log(&quot;Hello World&quot;)&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行脚本文件：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/index.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/index</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>查看帮助：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>进入 REPL 环境：</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>REPL 的全称：Read、Eval、 Print、Loop。类似于浏览器的控制台。</p>`,39)),s[17]||(s[17]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180301_1900.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180301_1900.png')"})],-1)),s[18]||(s[18]=i('<p>如果要退出 REPL 环境，可以输入<code>.exit</code> 或 <code>process.exit()</code>。</p><p>在 VS Code 里，我们可以在菜单栏选择“帮助-&gt;切换开发人员工具”，打开 console 控制台。</p><h2 id="包和-npm" tabindex="-1">包和 NPM <a class="header-anchor" href="#包和-npm" aria-label="Permalink to &quot;包和 NPM&quot;">​</a></h2><h3 id="什么是包" tabindex="-1">什么是包 <a class="header-anchor" href="#什么是包" aria-label="Permalink to &quot;什么是包&quot;">​</a></h3><p>由于 Node 是一套轻内核的平台，虽然提供了一系列的内置模块，但是不足以满足开发者的需求，于是乎出现了包（package）的概念： 与核心模块类似，就是将一些预先设计好的功能或者说 API 封装到一个文件夹，提供给开发者使用。</p><p>Node 本身并没有太多的功能性 API，所以市面上涌现出大量的第三方人员开发出来的 Package。</p><h3 id="包的加载机制" tabindex="-1">包的加载机制 <a class="header-anchor" href="#包的加载机制" aria-label="Permalink to &quot;包的加载机制&quot;">​</a></h3><p>如果 Node 中自带的包和第三方的包名冲突了，该怎么处理呢？原则是：</p><ul><li><p>先在系统核心（优先级最高）的模块中找；</p></li><li><p>然后到当前项目中 node_modules 目录中找。</p></li></ul><p>比如说：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requiere</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`fs`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>那加载的肯定是系统的包。所以，我们尽量不要创建一些和现有的包重名的包。</p><h3 id="npm-的概念" tabindex="-1">NPM 的概念 <a class="header-anchor" href="#npm-的概念" aria-label="Permalink to &quot;NPM 的概念&quot;">​</a></h3><p><strong>NPM</strong>：Node Package Manager。官方链接： <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">https://www.npmjs.com/</a></p><p>Node.js 发展到现在，已经形成了一个非常庞大的生态圈。包的生态圈一旦繁荣起来，就必须有工具去来管理这些包。NPM 应运而生。</p><p>举个例子，当我们在使用 Java 语言做开发时，需要用到 JDK 提供的内置库，以及第三方库。同样，在使用 JS 做开发时，我们可以使用 NPM 包管理器，方便地使用成熟的、优秀的第三方框架，融合到我们自己的项目中，极大地加速日常开发的构建过程。</p><p>随着时间的发展，NPM 出现了两层概念：</p><ul><li><p>一层含义是 Node 的开放式模块登记和管理系统，亦可以说是一个生态圈，一个社区。</p></li><li><p>另一层含义是 Node 默认的模块管理器，是一个命令行下的软件，用来安装和管理 Node 模块。</p></li></ul><h3 id="npm-的安装-不需要单独安装" tabindex="-1">NPM 的安装（不需要单独安装） <a class="header-anchor" href="#npm-的安装-不需要单独安装" aria-label="Permalink to &quot;NPM 的安装（不需要单独安装）&quot;">​</a></h3><p>NPM 不需要单独安装。默认在安装 Node 的时候，会连带一起安装 NPM：</p>',20)),s[19]||(s[19]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1105.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1105.png')"})],-1)),s[20]||(s[20]=a("p",null,"NVM、Node、NPM 安装之后，目录分布如下：",-1)),s[21]||(s[21]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1134.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1134.png')"})],-1)),s[22]||(s[22]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1137.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1137.png')"})],-1)),s[23]||(s[23]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1138.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1138.png')"})],-1)),s[24]||(s[24]=a("p",null,[e("输入 "),a("code",null,"npm -v"),e("，查看 npm 的版本：")],-1)),s[25]||(s[25]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1139.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1139.png')"})],-1)),s[26]||(s[26]=i('<p>如果上方命令无效，可能是之前的 node 并没有完全安装成功。解决办法：<a href="https://segmentfault.com/a/1190000011114680" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000011114680</a></p><p>另外，Node 附带的 NPM 可能不是最新版本，可以用下面的命令，更新到最新版本：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="配置-npm-的全局目录-暂略" tabindex="-1">配置 NPM 的全局目录（暂略） <a class="header-anchor" href="#配置-npm-的全局目录-暂略" aria-label="Permalink to &quot;配置 NPM 的全局目录（暂略）&quot;">​</a></h3><p>NPM 默认安装到当前正在使用 Node 版本所在目录下。我们建议重新配置 NPM 的全局目录。</p><p>输入<code>npm config ls</code>，查看：</p>',6)),s[27]||(s[27]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1210.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1210.png')"})],-1)),s[28]||(s[28]=i(`<h3 id="npm包的版本管理" tabindex="-1">NPM包的版本管理 <a class="header-anchor" href="#npm包的版本管理" aria-label="Permalink to &quot;NPM包的版本管理&quot;">​</a></h3><p>NPM包的管理都是通过项目根目录的 <code>package.json</code>文件实现。</p><p>当你使用 npm 安装一个包或者更新一个包的时候，package.json 里会自动添加<strong>包名和包的版本</strong>。npm 默认安装<strong>符合条件</strong>的最新版本，然后在版本号之前添加<code>^</code>符号。</p><p>NPM包的版本号，是用三位数表示。版本号前面的符号，代表开发者想要更新的的最新版本条件：</p><ul><li>符号<code>^</code>：固定第一位数。表示主版本固定的情况下，可更新至最新版。例如 <code>vue: &quot;^2.6.0&quot;</code> 表示 2.6.0及其以上的2.x.x 都是满足的。</li><li>符号<code>~</code>：固定前两位数。表示次版本固定的情况下，可更新至最新版。例如 <code>vuex: &quot;~2.6.0&quot;</code>，2.6.0及其以上的2.6.x都是满足的。</li><li>无符号：三位数都固定。无符号表示固定版本号。例如 <code>vue: &quot;2.6.0&quot;</code>，此时一定是安装<code>2.6.0</code>版本。</li></ul><p>参考链接：</p><ul><li><a href="https://juejin.cn/post/6960928446826741796" target="_blank" rel="noreferrer">请将你的npm依赖版本锁定</a></li></ul><h2 id="npm-的常用命令" tabindex="-1">NPM 的常用命令 <a class="header-anchor" href="#npm-的常用命令" aria-label="Permalink to &quot;NPM 的常用命令&quot;">​</a></h2><p>查看 npm 当前版本：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>更新 npm：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm@latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>项目初始化：（执行完成后，会生成<code>package.json</code>文件）</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 快速跳过问答式界面，选择默认配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>只在当前工程下安装指定的包：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在全局安装指定的包：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install -g [package]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装的包只用于开发环境，不用于生产环境：（会出现在 package.json 文件中的 devDependencies 属性中）</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package] --save-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package] -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>安装的包需要发布到生产环境：（会出现在 package.json 文件中的 dependencies 属性中）</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package] --save</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package] -S</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>查看当前目录下已安装的 node 包：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看全局已经安装的 node 包：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看 npm 帮助命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看指定命令的帮助：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [指定命令] --help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>更新指定的包：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>卸载指定的包：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看配置信息：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看本地安装的指定包的信息，没有则显示 empty：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看全局安装的指定包的信息，没有则显示 empty：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package] -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看远程 npm 上指定包的所有版本信息：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看当前包的安装路径：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看全局包的安装路径：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="配置-npm-镜像源" tabindex="-1">配置 npm 镜像源 <a class="header-anchor" href="#配置-npm-镜像源" aria-label="Permalink to &quot;配置 npm 镜像源&quot;">​</a></h2><p>由于 npm 默认的下载地址在国外（npmjs.com），有时候会被墙，导致无法下载或者下载很慢。因此，我们可以尝试切换成，从其他的镜像源下载 npm 包。</p><p>切换镜像源，有下面这几种方式：</p><ul><li><p>方式 1：临时切换镜像源。</p></li><li><p>方式 2：切换镜像源</p></li><li><p>方式 3：通过 NRM 切换镜像源（最为推荐的方式）。</p></li><li><p>方式 4：cnpm。</p></li></ul><p>下面来分别讲一下。</p><h3 id="方式-1-临时切换镜像源" tabindex="-1">方式 1：临时切换镜像源 <a class="header-anchor" href="#方式-1-临时切换镜像源" aria-label="Permalink to &quot;方式 1：临时切换镜像源&quot;">​</a></h3><p>安装指定包的时候，通过追加 <code>--registry</code>参数即可。格式如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 格式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [package] --registry [https://xxx]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 举例：在下载安装 express 这个包的时候，临时指定镜像源为 https://registry.npm.taobao.org</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.npm.taobao.org</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="方式-2-切换镜像源" tabindex="-1">方式 2：切换镜像源 <a class="header-anchor" href="#方式-2-切换镜像源" aria-label="Permalink to &quot;方式 2：切换镜像源&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.npm.taobao.org</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行上述命令后，以后下载所有 npm 包的时候，都会改为使用淘宝的镜像源。</p><h3 id="方式-3-通过-nrm-切换镜像源-推荐" tabindex="-1">方式 3：通过 NRM 切换镜像源（推荐） <a class="header-anchor" href="#方式-3-通过-nrm-切换镜像源-推荐" aria-label="Permalink to &quot;方式 3：通过 NRM 切换镜像源（推荐）&quot;">​</a></h3><p><strong>NRM</strong>：Node Registry Manager。作用是：<strong>切换和管理 npm 包的镜像源</strong>。</p><ul><li><p>项目地址：<a href="https://www.npmjs.com/package/nrm" target="_blank" rel="noreferrer">https://www.npmjs.com/package/nrm</a></p></li><li><p>GitHub 地址： <a href="https://github.com/Pana/nrm" target="_blank" rel="noreferrer">https://github.com/Pana/nrm</a></p></li></ul><p><strong>安装 NRM</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	npm install -g nrm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,62)),s[29]||(s[29]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1208.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1208.png')"})],-1)),s[30]||(s[30]=i(`<p><strong>NRM 的常用命令：</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示全部的镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用淘宝的镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> taobao</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>效果如下：</p>`,3)),s[31]||(s[31]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_1215.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_1215.png')"})],-1)),s[32]||(s[32]=i('<p>推荐的国内加速镜像淘宝：<a href="https://npm.taobao.org/" target="_blank" rel="noreferrer">https://npm.taobao.org/</a></p><h2 id="方式-4-安装-cnpm" tabindex="-1">方式 4：安装 cnpm <a class="header-anchor" href="#方式-4-安装-cnpm" aria-label="Permalink to &quot;方式 4：安装 cnpm&quot;">​</a></h2><ul><li>项目地址：<a href="https://npm.taobao.org/" target="_blank" rel="noreferrer">https://npm.taobao.org/</a></li></ul><p>安装<code>cnpm</code>替换 npm（npm 由于源服务器在国外，下载包的速度较慢，cnpm 会使用国内镜像）：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --registry=https://registry.npm.taobao.org</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',5)),s[33]||(s[33]=a("p",null,[a("img",{src:"http://img.smyhvae.com/20180302_2204.png",alt:"",onclick:"previewImage('http://img.smyhvae.com/20180302_2204.png')"})],-1)),s[34]||(s[34]=i(`<p>以后我们就可以通过 cnpm 命令去安装一个包。举例如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 vue 这个包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这里的单词 <code>install</code> 可以简写成 <code>i</code>。</p><h2 id="node-js-的简单使用" tabindex="-1">Node.js 的简单使用 <a class="header-anchor" href="#node-js-的简单使用" aria-label="Permalink to &quot;Node.js 的简单使用&quot;">​</a></h2><p>我们可以输入<code>node</code>命令，然后在里面写 js 的代码。</p><p>或者，也可以 通过 node 运行 指定的 js 文件。比如，编写好一个 js 文件<code>01.js</code>，然后在命令行输入：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 01.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>就可以执行这个 js 程序，直接在命令行查看运行结果。</p><h2 id="赞赏作者" tabindex="-1">赞赏作者 <a class="header-anchor" href="#赞赏作者" aria-label="Permalink to &quot;赞赏作者&quot;">​</a></h2><p>创作不易，你的赞赏和认可，是我更新的最大动力：</p>`,10)),s[35]||(s[35]=a("p",null,[a("img",{src:"https://img.smyhvae.com/20220401_1800.jpg",alt:"",onclick:"previewImage('https://img.smyhvae.com/20220401_1800.jpg')"})],-1))])}const F=p(d,[["render",o]]);export{v as __pageData,F as default};
