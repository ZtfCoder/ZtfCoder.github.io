import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.1baa841b.js";const m=JSON.parse('{"title":"mysql DQL","description":"","frontmatter":{"title":"mysql DQL","tags":"mysql","categories":"mysql","abbrlink":"b26d9df4"},"headers":[],"relativePath":"main/mysql/数据库DQL.md","filePath":"main/mysql/数据库DQL.md","lastUpdated":1699426983000}'),p={name:"main/mysql/数据库DQL.md"},e=l(`<h1 id="dql-数据库查询语言" tabindex="-1">DQL 数据库查询语言 <a class="header-anchor" href="#dql-数据库查询语言" aria-label="Permalink to &quot;DQL 数据库查询语言&quot;">​</a></h1><h2 id="数据查询语言-dql" tabindex="-1">数据查询语言 DQL <a class="header-anchor" href="#数据查询语言-dql" aria-label="Permalink to &quot;数据查询语言 DQL&quot;">​</a></h2><p>数据查询语言 DQL 基本结构是由 select 子句，from 子句，where 子句组成的查询块： select&lt;字段名表&gt; from &lt;表或视图名&gt; where&lt;查询条件&gt;</p><h2 id="查询语句" tabindex="-1">查询语句 <a class="header-anchor" href="#查询语句" aria-label="Permalink to &quot;查询语句&quot;">​</a></h2><p>mysql&gt;select*from 表名;</p><p>mysql&gt; select 字段 1,字段 2,...... from 表名;</p><p>mysql&gt;select distinct 字段 1,字段 2,....from 表名;</p><p>mysql&gt;select 字段 1,字段 2,.....from 表名 where 限制条件;</p><p><strong>where 是用于分组前筛选</strong></p><h3 id="区间查询" tabindex="-1">区间查询 <a class="header-anchor" href="#区间查询" aria-label="Permalink to &quot;区间查询&quot;">​</a></h3><p>关键词</p><p>​ is null</p><p>​ is not null</p><p>比较操作符</p><p>​ &lt;=&gt; 当&lt;=&gt;左右两边的字段的值相等或者都是 null 时，&lt;=&gt;的结果是 true，则返回满足条件的数据</p><h3 id="模糊查询" tabindex="-1">模糊查询 <a class="header-anchor" href="#模糊查询" aria-label="Permalink to &quot;模糊查询&quot;">​</a></h3><p>通配符：</p><p>​ %,代表不限个数个字符</p><p>​ _,代表一个字符</p><p>语法</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">select*from</span><span style="color:#E1E4E8;"> 表名 </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> 字段 </span><span style="color:#F97583;">like</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;%k&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">select*from</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> 字段 </span><span style="color:#D73A49;">like</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;%k&#39;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>解释： 查询字段中数据是以 k 为末尾的数据</p><p>查询不存在,</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> emp </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> ename </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">like</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;%s%&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> emp </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> ename </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">like</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;%s%&#39;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="离散查询" tabindex="-1">离散查询 <a class="header-anchor" href="#离散查询" aria-label="Permalink to &quot;离散查询&quot;">​</a></h3><p>in，not in 关键词</p><p>in(数据 1,数据 2,..)</p><p>语法</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">&gt;select*from</span><span style="color:#E1E4E8;"> 表名 </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> 字段 </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;">(数据1,数据2....);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">&gt;select*from</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> 字段 </span><span style="color:#D73A49;">in</span><span style="color:#24292E;">(数据1,数据2....);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="排序查询" tabindex="-1">排序查询 <a class="header-anchor" href="#排序查询" aria-label="Permalink to &quot;排序查询&quot;">​</a></h3><p>语法（ order by 字段名 asc/desc;）</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">&gt;select*from</span><span style="color:#E1E4E8;"> 表名 </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> 字段 </span><span style="color:#F97583;">asc</span><span style="color:#E1E4E8;">(或者 </span><span style="color:#F97583;">desc</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">&gt;select*from</span><span style="color:#24292E;"> 表名 </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> 字段 </span><span style="color:#D73A49;">asc</span><span style="color:#24292E;">(或者 </span><span style="color:#D73A49;">desc</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>默认是升序，asc 升序 desc 降序</p><h3 id="分组查询-有坑" tabindex="-1">分组查询(有坑) <a class="header-anchor" href="#分组查询-有坑" aria-label="Permalink to &quot;分组查询(有坑)&quot;">​</a></h3><p>（根据结果来进行分组）</p><p>使用关键词 group by，</p><p><strong>限制语句是用 having，是在分组后进行筛选</strong></p><p>比如 查询每个部门的平均工资</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">department_id</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">avg</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">e</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">salary</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;平均&#39;</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> employees e</span></span>
<span class="line"><span style="color:#F97583;">join</span><span style="color:#E1E4E8;"> departments d</span></span>
<span class="line"><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">e</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">department_id</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">department_id</span></span>
<span class="line"><span style="color:#F97583;">GROUP BY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">department_name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">d</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">department_id</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">avg</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">e</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">salary</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;平均&#39;</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> employees e</span></span>
<span class="line"><span style="color:#D73A49;">join</span><span style="color:#24292E;"> departments d</span></span>
<span class="line"><span style="color:#D73A49;">on</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">e</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">department_id</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">d</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">department_id</span></span>
<span class="line"><span style="color:#D73A49;">GROUP BY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">d</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">department_name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>根据部门名称或者部门 id 来进行分租，然后求出每个组的平均工资，最后整理得每个部门的平均工资</p><h3 id="子查询" tabindex="-1">子查询 <a class="header-anchor" href="#子查询" aria-label="Permalink to &quot;子查询&quot;">​</a></h3><p>可以把前一次查询的结果作为第二次查询时的表、条件等使用</p><p>比如 查询工资高于公司平均工资的员工姓名和工资</p><p>1.先查平均工资</p><p>2.再查高于平均工资的</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> first_name,salary</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> employees</span></span>
<span class="line"><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> salary</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">avg</span><span style="color:#E1E4E8;">(salary)</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> employees)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> first_name,salary</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> employees</span></span>
<span class="line"><span style="color:#D73A49;">where</span><span style="color:#24292E;"> salary</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">avg</span><span style="color:#24292E;">(salary)</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> employees)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>再比如 用子查询查询所有不在美国工作的员工的姓名</p><p>1.查询出所有在美国的部门 id 2.用部门 id 过滤员工信息</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> first_name</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> employees</span></span>
<span class="line"><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> department_id </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">department_id</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> locations l</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">join</span><span style="color:#E1E4E8;"> departments d</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">l</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">location_id</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">location_id</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">l</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">country_id</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;US&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> first_name</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> employees</span></span>
<span class="line"><span style="color:#D73A49;">where</span><span style="color:#24292E;"> department_id </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">d</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">department_id</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> locations l</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">join</span><span style="color:#24292E;"> departments d</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">l</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">location_id</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">d</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">location_id</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">l</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">country_id</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;US&#39;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">工资高于10000的员工的平均工资</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">avg</span><span style="color:#E1E4E8;">(salary)</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> first_name,last_name,salary</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> employees</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> salary</span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">) e</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">工资高于10000的员工的平均工资</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">avg</span><span style="color:#24292E;">(salary)</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> first_name,last_name,salary</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> employees</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> salary</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">) e</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="分页查询" tabindex="-1">分页查询 <a class="header-anchor" href="#分页查询" aria-label="Permalink to &quot;分页查询&quot;">​</a></h3><p>在指定的条件下只显示一部分数据</p><p>索引从 0 开始计算</p><p>关键词 limit 参数 1(开始索引),参数 2(数量)</p><h3 id="联合查询" tabindex="-1">联合查询 <a class="header-anchor" href="#联合查询" aria-label="Permalink to &quot;联合查询&quot;">​</a></h3><p>把多次查询的结果竖着放一起显示，多次查询的列的数量和类型要一致 查询 1</p><p>union</p><p>查询 2</p><p>union 去重</p><p>union all 不会会去重</p><h2 id="常见函数" tabindex="-1">常见函数 <a class="header-anchor" href="#常见函数" aria-label="Permalink to &quot;常见函数&quot;">​</a></h2><h3 id="单行函数" tabindex="-1">单行函数 <a class="header-anchor" href="#单行函数" aria-label="Permalink to &quot;单行函数&quot;">​</a></h3><p>select length(参数);</p><p>select concat(字段 1,“链接符”,字段 2,) from 表名;</p><h3 id="聚合函数" tabindex="-1">聚合函数 <a class="header-anchor" href="#聚合函数" aria-label="Permalink to &quot;聚合函数&quot;">​</a></h3><p>count(字段);</p><p>​ select count(字段)from 表名;</p><p>max();</p><p>​ selcet max(字段)from 表名;</p><p>min();</p><p>​ select min(字段)from 表名;</p><p>sum();</p><p>​ select sum(字段)from 表名;</p><p>avg();</p><p>​ select avg(字段)from 表名;</p><h2 id="数学函数" tabindex="-1">数学函数 <a class="header-anchor" href="#数学函数" aria-label="Permalink to &quot;数学函数&quot;">​</a></h2><p>round();</p><p>ceil();</p><p>floor();</p><h2 id="多表查询" tabindex="-1">多表查询 <a class="header-anchor" href="#多表查询" aria-label="Permalink to &quot;多表查询&quot;">​</a></h2><h3 id="内连接-inner-join" tabindex="-1">内连接(inner) join <a class="header-anchor" href="#内连接-inner-join" aria-label="Permalink to &quot;内连接(inner) join&quot;">​</a></h3><p>》select 查询字段</p><p>》from 表名</p><p>》inner join 另一个表名</p><p>》on 表名.关联字段= 另一个表名.关联字段;</p><h3 id="左连接" tabindex="-1">左连接 <a class="header-anchor" href="#左连接" aria-label="Permalink to &quot;左连接&quot;">​</a></h3><p>》select 查询字段</p><p>》from 表名</p><p>》left join 另一个表名</p><p>》on 表名.关联字段= 另一个表名.关联字段;</p><p>等于左外连接</p><h3 id="右链接" tabindex="-1">右链接 <a class="header-anchor" href="#右链接" aria-label="Permalink to &quot;右链接&quot;">​</a></h3><p>》select 查询字段</p><p>》from 表名</p><p>》right join 另一个表名</p><p>》on 表名.关联字段= 另一个表名.关联字段;</p><h2 id="if-函数" tabindex="-1">if 函数 <a class="header-anchor" href="#if-函数" aria-label="Permalink to &quot;if 函数&quot;">​</a></h2><p>类似 Java 三元表达式</p><p>if(参数 1,参数 2,参数 3)</p><h2 id="去重" tabindex="-1">去重 <a class="header-anchor" href="#去重" aria-label="Permalink to &quot;去重&quot;">​</a></h2><p>distinct</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">select distinct</span><span style="color:#E1E4E8;"> sal</span><span style="color:#F97583;">+ifnull</span><span style="color:#E1E4E8;">(comm,</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;"> 总工资 </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> emp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">select distinct</span><span style="color:#24292E;"> sal</span><span style="color:#D73A49;">+ifnull</span><span style="color:#24292E;">(comm,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">12</span><span style="color:#24292E;"> 总工资 </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> emp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="all-表示小于最小" tabindex="-1">&lt;ALL 表示小于最小 <a class="header-anchor" href="#all-表示小于最小" aria-label="Permalink to &quot;&lt;ALL 表示小于最小&quot;">​</a></h3><p>所有数据。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"></span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote></blockquote><h3 id="any-任何" tabindex="-1">any 任何 <a class="header-anchor" href="#any-任何" aria-label="Permalink to &quot;any 任何&quot;">​</a></h3><p>任何一个数据</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&gt;ANY 表示大于最小值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;ANY 表示大于最小值</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,109),o=[e];function r(t,c,i,y,d,E){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{m as __pageData,u as default};
