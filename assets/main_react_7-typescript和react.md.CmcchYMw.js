import{_ as t,c as s,a2 as c,o as p}from"./chunks/framework.sGs2IBkb.js";const a="/assets/image3.B3CcQDm-.png",y=JSON.parse('{"title":"react和typescript第二节","description":"react typescript","frontmatter":{"title":"react和typescript第二节","description":"react typescript"},"headers":[],"relativePath":"main/react/7-typescript和react.md","filePath":"main/react/7-typescript和react.md","lastUpdated":1729399342000}'),i={name:"main/react/7-typescript和react.md"};function r(o,e,d,n,l,m){return p(),s("div",null,e[0]||(e[0]=[c('<p>前面一章,我们学了 typescript,这章我们把 typescript 与 react 结合起来,</p><h2 id="搭建项目" tabindex="-1">搭建项目 <a class="header-anchor" href="#搭建项目" aria-label="Permalink to &quot;搭建项目&quot;">​</a></h2><p>首先在一个空文件夹下面 打开 cmd</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>接着等待一会后,会出现 第二节的脚手架 一样的流程输入</p><ol><li>首先输入项目名称 回车</li><li>选择 <code>react</code> 框架 回车</li><li>选择<code>typescript</code> 第一个选项 回车</li></ol><p>进入到新创建项目文件夹内,打开 cmd 执行 <code>npm i</code> 进行安装依赖</p><p>用 vscode 打开后,可以看到,基本和我们之前创建的是一样的,但是多了些其他内容 <img src="'+a+'" alt="alt text"></p><p>可以看到我们以前的<code>jsx</code> 文件变成了<code>tsx</code>, 这个就是 react 和 typescript 的结合文件</p><p>vite-env.d.ts : 这是 vite 自带的 ts 类型,里面有一些全局使用的类型</p><p>tsconfig.app.json:<code>typescript</code> 的配置文件,我们不用管,默认的就够用</p><p>ts.config.json :<code>typescript</code> 的配置文件,我们不用管,默认的就够用</p><p>ts.node.json :<code>typescript</code> 的配置文件,我们不用管,默认的就够用</p><div class="warning custom-block"><p class="custom-block-title">提示</p><p>只要是 typescript 项目,以前创建的<code>jsx</code> 文件,现在需要改成<code>tsx</code> 后缀, <code>js</code> 后缀文件,需要改成<code>ts</code> 后缀文件</p></div>',14)]))}const u=t(i,[["render",r]]);export{y as __pageData,u as default};
