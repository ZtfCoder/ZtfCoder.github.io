import{_ as a,D as r,c as t,I as o,a5 as l,o as p}from"./chunks/framework.rSw690SR.js";const f=JSON.parse('{"title":"02-2022年Web前端入门自学路线（精简版）","description":"","frontmatter":{"title":"02-2022年Web前端入门自学路线（精简版）"},"headers":[],"relativePath":"hxg/16-前端综合/02-2022年Web前端入门自学路线（精简版）.md","filePath":"hxg/16-前端综合/02-2022年Web前端入门自学路线（精简版）.md","lastUpdated":1725860495000}'),i={name:"hxg/16-前端综合/02-2022年Web前端入门自学路线（精简版）.md"},n=l('<blockquote><p>本文的最新内容，更新于<strong>2021-10-09</strong>。大家完全不用担心这篇文章会过时，因为随着 前端技术的更新，本文也会随之更新。</p></blockquote><blockquote><p>本文的最新内容也会在<a href="https://github.com/qianguyihao/Web" target="_blank" rel="noreferrer">GitHub</a>上实时更新。欢迎在GitHub上关注我，一起入门和进阶前端。</p></blockquote><p>我之前写过一篇文章：<a href="http://www.cnblogs.com/smyhvae/p/8732781.html" target="_blank" rel="noreferrer">《裸辞两个月，海投一个月，从Android转战Web前端的求职之路》</a>。这篇文章讲述了我在转型过程中的亲身经历和感受，不少童鞋私信问我怎么入门前端，于是有了这篇文章。</p><h2 id="web前端入门的自学路线" tabindex="-1">Web前端入门的自学路线 <a class="header-anchor" href="#web前端入门的自学路线" aria-label="Permalink to &quot;Web前端入门的自学路线&quot;">​</a></h2><blockquote><p>新手入门前端，需要学习的<strong>基础内容</strong>有很多，如下。</p></blockquote><p>一、HTML、CSS基础、JavaScript语法基础。学完基础后，可以仿照电商网站（例如京东、小米）做首页的布局。</p><p>二、JavaScript语法进阶。包括：作用域和闭包、this和对象原型等。相信我，JS语法，永远是面试中最重要的部分。</p><p>三、jQuery、Ajax等。jQuery没有过时，它仍然是前端基础的一部分。</p><p>四、ES6语法。这部分属于JS新增的语法，面试必问。其中，关于 promise、async 等内容要尤其关注。</p><p>五、HTML5和CSS3。要熟悉其中的新特性。</p><p>六、canvas。面试时，有的公司不一定会问canvas，靠运气。如果时间不够，这部分的内容可以先不学。但如果你会，绝对属于加分项。</p><p>七、移动Web开发、Bootstrap等。要注意移动开发中的适配和兼容性问题。</p><p>八、前端框架：Vue.js和React。这两个框架至少要会一个。入门时，建议先学Vue.js，上手相对容易。但无论如何，同时掌握 Vue 和 React 才是合格的前端同学。</p><p>九、UI框架：<a href="https://ant.design/index-cn" target="_blank" rel="noreferrer">Ant Design</a>、<a href="https://element.eleme.cn/#/" target="_blank" rel="noreferrer">Element UI</a>。在做管理后台的时候，这两个UI框架使用的比较多的。Element UI 是基于 Vue.js技术栈的。Ant Design 既有基于 React技术栈的，也有基于 Vue.js技术栈的 <a href="https://antdv.com/" target="_blank" rel="noreferrer">Ant Design Vue</a> 。</p><p>九、Node.js。属于加分项，如果时间不够，可以先不学，但至少要知道 Node 环境的配置，以及 Node 的一些基础知识。</p><p>十、前端工程化：构建工具 Webpack、构建工具 gulp、CSS 预处理器 Sass、自动化测试、持续集成 等。注意，Sass 比 Less 用得多，gulp 比 grunt 用得多。</p><p>十一、前端综合：HTTP协议、跨域通信、安全问题（CSRF、XSS）、浏览器渲染机制、异步和单线程、页面性能优化、防抖动（Debouncing）和节流阀（Throtting）、lazyload、前端错误监控、虚拟DOM等。</p><p>十二、编辑器相关。Visual Studio Code 是每个学前端的人都要用到的编辑器。另外，前端常见的编辑器、IDE有两个：Sublime Text 和 WebStorm 。WebStorm 什么都好，可就是太卡顿；VS Code就相对轻量很多，但是比较占内存。个人总结一下：用VS Code 的人越来越多，用 WebStorm 的人越来越少。具体可以看：《<a href="https://www.cnblogs.com/qianguyihao/p/10732375.html" target="_blank" rel="noreferrer">第一次使用VS Code时你应该知道的一切配置</a>》</p><p>十三、TypeScript（简称TS）。ES 是 JS 的标准，TS 是 JS 的超集。TS属于进阶内容，建议把上面的基础掌握之后，再学TS。</p><p>十四、小程序开发。学会基本的JS语法，再了解小程序独有的API（参考小程序的官方文档），就已经掌握了小程序开发，没有你想象的那么难，so easy。小程序在商业上是成功的，但我个人认为它是 Web 技术的倒退，也完全体现不出开源精神和开放精神。而且小程序的开发效率贼低，IDE也卡到了极点，卡爆了。</p><p>当然，不得不承认，小程序开发让很多人找到了编程的工作。但你要一路谨记：不要做小程序开发工程师，要做Web前端开发工程师。</p><p>十五、总结——框架有时候很虚；熟练掌握 JavaScript 基础、核心源码，才是行走江湖、驰骋千里的关键。</p><h2 id="推荐的前端图文教程" tabindex="-1">推荐的前端图文教程 <a class="header-anchor" href="#推荐的前端图文教程" aria-label="Permalink to &quot;推荐的前端图文教程&quot;">​</a></h2><p>我在GitHub上有一个Web前端入门的学习教程，非常详细，地址是：</p><blockquote><p><a href="https://github.com/qianguyihao/Web" target="_blank" rel="noreferrer">https://github.com/qianguyihao/Web</a></p></blockquote><p>非常详细和贴心，你值得star。这个前端教程主要有三个作用：</p><ul><li><p>网上的大部分入门教程，都不太适合初学者，本项目争取照顾到每一位入门者的同理心。</p></li><li><p>帮助前端同学提供一个精品学习路线和资源，提高学习效率，少走很多弯路。</p></li><li><p>可以当做前端字典，随时翻阅，查漏补缺。</p></li></ul><h2 id="推荐的技术博客" tabindex="-1">推荐的技术博客 <a class="header-anchor" href="#推荐的技术博客" aria-label="Permalink to &quot;推荐的技术博客&quot;">​</a></h2><ul><li><p><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noreferrer">阮一峰</a></p></li><li><p><a href="http://www.zhangxinxu.com/wordpress/" target="_blank" rel="noreferrer">张鑫旭</a></p></li></ul><h2 id="推荐的书籍" tabindex="-1">推荐的书籍 <a class="header-anchor" href="#推荐的书籍" aria-label="Permalink to &quot;推荐的书籍&quot;">​</a></h2><h3 id="_1、基础知识相关书籍" tabindex="-1">1、基础知识相关书籍 <a class="header-anchor" href="#_1、基础知识相关书籍" aria-label="Permalink to &quot;1、基础知识相关书籍&quot;">​</a></h3><ul><li>《<a href="https://book.douban.com/subject/26941639/" target="_blank" rel="noreferrer">网络是怎样连接的</a>》</li></ul><p>程序员面试的时候，经常会被问的一个问题是：“在浏览器的地址栏输入url，按下回车后，发生了什么？”</p><p>为了清楚这个问题，看上面这本书，足够了。如果你想入门计算机网络，这本书也是必读的。评价非常高。</p><p>关于这个问题，也可以看下面这篇文章：<a href="https://zhuanlan.zhihu.com/p/43369093" target="_blank" rel="noreferrer">浏览器输入 URL 后发生了什么？</a></p><h3 id="_2、js相关书籍" tabindex="-1">2、JS相关书籍 <a class="header-anchor" href="#_2、js相关书籍" aria-label="Permalink to &quot;2、JS相关书籍&quot;">​</a></h3><ul><li>《<a href="https://book.douban.com/subject/26351021/" target="_blank" rel="noreferrer">你不知道的JavaScript</a>》</li></ul><p>上面这套书有上、中、下三本，你都可以读一读。如果时间不够，那就先读第一本。</p><ul><li>《<a href="https://book.douban.com/subject/35085910/" target="_blank" rel="noreferrer">JavaScript语言精髓与编程实践</a>》</li></ul><p>周爱民的书，谁能不爱？这本书不但完整解析了 JavaScript 语言，还逐一剖析了相关特性在多个开源项目中的编程实践与应用。</p><ul><li>《<a href="https://book.douban.com/subject/35175321/" target="_blank" rel="noreferrer">JavaScript高级程序设计</a>》</li></ul><p>红宝书，人人都知道。</p><ul><li>《<a href="https://book.douban.com/subject/35469273/" target="_blank" rel="noreferrer">JavaScript 悟道</a>》</li></ul><p>本书首先介绍JavaScript的基本知识：命名、数值、布尔值和字符串等，并展示了其缺陷和局限性，但随后展示了如何解决这些问题；接着继续研究数据结构和函数，探索底层机制，并使用高阶函数来实现面向对象编程。</p><p>本书的翻译是@死月，</p><h3 id="_3、css相关书籍" tabindex="-1">3、CSS相关书籍 <a class="header-anchor" href="#_3、css相关书籍" aria-label="Permalink to &quot;3、CSS相关书籍&quot;">​</a></h3><ul><li>《<a href="https://book.douban.com/subject/27615777/" target="_blank" rel="noreferrer">CSS世界</a>》</li></ul><p>关于 CSS 的书籍，首先推荐这本书，我身边的大佬们都说这本书好。虽然我不是大牛，但我也觉得这本书很好。</p><p>如果 js 熟练，说明你是有技术深度的前端；如果 css 熟练，说明你是有经验的前端。</p><ul><li>《<a href="https://book.douban.com/subject/35539710/" target="_blank" rel="noreferrer">CSS新世界</a>》</li></ul><p>这是一本关于CSS的进阶读物，专门讲CSS3及其之后版本的新特性。</p><ul><li>《<a href="https://book.douban.com/subject/30450258/" target="_blank" rel="noreferrer">精通 CSS</a>》</li></ul><p>CSS 进阶书籍。</p><h3 id="_4、面试相关书籍" tabindex="-1">4、面试相关书籍 <a class="header-anchor" href="#_4、面试相关书籍" aria-label="Permalink to &quot;4、面试相关书籍&quot;">​</a></h3><ul><li>《<a href="https://book.douban.com/subject/35218831/" target="_blank" rel="noreferrer">前端开发核心知识进阶：从夯实基础到突破瓶颈</a>》</li></ul><p>JS基础、ES6语法、Vue源码、React源码、前端性能优化等等，这些话题都是面试必问。</p><ul><li>《<a href="https://book.douban.com/subject/34788884/" target="_blank" rel="noreferrer">了不起的JavaScript工程师：从前端到全端高级进阶</a>》</li></ul><p>作者@<a href="https://yalishizhude.github.io/about/" target="_blank" rel="noreferrer">亚里士朱德</a> 是慕课网讲师，博客和课程都写的好。这本书讲述了开发者使用JavaScript在各种Web开发场景下所需要掌握的重点知识和概念。</p><h3 id="_5、vue-js、react-源码书籍" tabindex="-1">5、Vue.js、React 源码书籍 <a class="header-anchor" href="#_5、vue-js、react-源码书籍" aria-label="Permalink to &quot;5、Vue.js、React 源码书籍&quot;">​</a></h3><ul><li>《<a href="https://book.douban.com/subject/32581281/" target="_blank" rel="noreferrer">深入浅出Vue.js</a>》</li></ul><p>这本书讲 Vue.js 2.0的实现原理，很不错。 评分不高，不是因为书不好，而是因为你没看懂。</p><h2 id="推荐的链接" tabindex="-1">推荐的链接 <a class="header-anchor" href="#推荐的链接" aria-label="Permalink to &quot;推荐的链接&quot;">​</a></h2><ul><li>前端导航：<a href="https://www.cnblogs.com/qianguyihao/p/10701923.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/qianguyihao/p/10701923.html</a></li></ul><p>这个导航里列出了很多常见网站、博客、工具等，整体来看比较权威。</p><p>学是一方面，也是最主要的方面；但还有一个作用，比如，“这个前端框架你都不知道啊”、“这个前端大牛你都没听说过啊” 。此时，这份清单就能起到作用了。如果能把清单里列出的内容都了解下，逼格也会高很多。</p><ul><li>MDN 官方文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web</a></li></ul><p>如果你想查看前端的 api 文档，请首先去 MDN上看。很官方，很正规。</p><p>不要去什么 w3school 、菜鸟教程上看，上面有一堆错误。</p><h2 id="前端资讯订阅源" tabindex="-1">前端资讯订阅源 <a class="header-anchor" href="#前端资讯订阅源" aria-label="Permalink to &quot;前端资讯订阅源&quot;">​</a></h2><p>国内的很多技术博客，都是比较粗浅的二手知识，真正的大佬，看不上这些东西。</p><p>要了解最新的的前端技术趋势、前端资讯，还得看国外的网站。下面这两个前端资讯的网站，极力推荐。它们都可以通过邮件的形式订阅，我认为是前端开发者必须要订阅的：</p><ul><li>Daily JS：<a href="https://medium.com/dailyjs" target="_blank" rel="noreferrer">https://medium.com/dailyjs</a> - medium 上的博客。</li><li>JavaScript Weekly：<a href="https://javascriptweekly.com/" target="_blank" rel="noreferrer">https://javascriptweekly.com/</a> - 聚合类的技术周刊。</li></ul><h2 id="我的公众号" tabindex="-1">我的公众号 <a class="header-anchor" href="#我的公众号" aria-label="Permalink to &quot;我的公众号&quot;">​</a></h2><p>想学习<strong>更多技能</strong>？不妨关注我的微信公众号：<strong>千古壹号</strong>（id：<code>qianguyihao</code>）。</p><p>扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：</p><p><img src="http://img.smyhvae.com/2016040102.jpg" alt=""></p>',76);function h(s,u,c,b,d,_){const e=r("ArticleTopAd");return p(),t("div",null,[o(e),n])}const S=a(i,[["render",h]]);export{f as __pageData,S as default};
