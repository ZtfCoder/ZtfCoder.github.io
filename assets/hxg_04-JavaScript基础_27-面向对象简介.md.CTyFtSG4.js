import{_ as t,c as r,G as o,a2 as p,B as i,o as l}from"./chunks/framework.sGs2IBkb.js";const b=JSON.parse('{"title":"27-面向对象简介","description":"","frontmatter":{"title":"27-面向对象简介"},"headers":[],"relativePath":"hxg/04-JavaScript基础/27-面向对象简介.md","filePath":"hxg/04-JavaScript基础/27-面向对象简介.md","lastUpdated":1725860495000}'),n={name:"hxg/04-JavaScript基础/27-面向对象简介.md"};function s(h,a,c,d,m,u){const e=i("ArticleTopAd");return l(),r("div",null,[o(e),a[0]||(a[0]=p('<h2 id="面向过程和面向对象" tabindex="-1">面向过程和面向对象 <a class="header-anchor" href="#面向过程和面向对象" aria-label="Permalink to &quot;面向过程和面向对象&quot;">​</a></h2><h3 id="面向过程" tabindex="-1">面向过程 <a class="header-anchor" href="#面向过程" aria-label="Permalink to &quot;面向过程&quot;">​</a></h3><p><strong>面向过程</strong>：先分析好的具体步骤，然后按照步骤，一步步解决问题。</p><p>优点：性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用的面向过程编程。</p><p>缺点：没有面向对象易维护、易复用、易扩展。</p><h3 id="面向对象" tabindex="-1">面向对象 <a class="header-anchor" href="#面向对象" aria-label="Permalink to &quot;面向对象&quot;">​</a></h3><p><strong>面向对象</strong>（OOP，Object Oriented Programming）：以对象功能来划分问题，而不是步骤。</p><p>优点：易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统 更加灵活、更加易于维护。</p><p>缺点：性能比面向过程低。</p><h3 id="面向对象的编程思想" tabindex="-1">面向对象的编程思想 <a class="header-anchor" href="#面向对象的编程思想" aria-label="Permalink to &quot;面向对象的编程思想&quot;">​</a></h3><p>面向对象的编程思想：对代码和数据进行封装，并以对象调用的方式，对外提供统一的调用接口。</p><p>比如说，当我们在开车的时候，无需关心汽车的内部构造有多复杂，对于大多数人而言，只需要会开、知道汽车有哪些功能就行了。</p><h3 id="面向对象的特性" tabindex="-1">面向对象的特性 <a class="header-anchor" href="#面向对象的特性" aria-label="Permalink to &quot;面向对象的特性&quot;">​</a></h3><p>在面向对象程序开发思想中，每一个对象都是功能中心，具有明确分工。面向对象编程具有灵活、代码可复用、容易维护和开发的优点，适合多人合作的大型软件项目，更符合我们认识事物的规律。</p><p>面向对象的特性如下：</p><ul><li><p>封装性</p></li><li><p>继承性</p></li><li><p>多态性</p></li></ul><h3 id="js-中的面向对象" tabindex="-1">JS 中的面向对象 <a class="header-anchor" href="#js-中的面向对象" aria-label="Permalink to &quot;JS 中的面向对象&quot;">​</a></h3><p>JS 中的面向对象，是基于<strong>原型</strong>的面向对象。JS 中的对象（Object）是依靠构造器（constructor）和原型（prototype）构造出来的。</p><p>另外，在ES6中，新引入了 类（Class）和继承（Extends）来实现面向对象。</p><h2 id="赞赏作者" tabindex="-1">赞赏作者 <a class="header-anchor" href="#赞赏作者" aria-label="Permalink to &quot;赞赏作者&quot;">​</a></h2><p>创作不易，你的赞赏和认可，是我更新的最大动力：</p><p><img src="https://img.smyhvae.com/20220401_1800.jpg" alt=""></p>',22))])}const f=t(n,[["render",s]]);export{b as __pageData,f as default};
