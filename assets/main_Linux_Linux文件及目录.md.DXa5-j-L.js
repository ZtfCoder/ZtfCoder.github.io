import{_ as e,c as n,a2 as s,o as p}from"./chunks/framework.sGs2IBkb.js";const u=JSON.parse('{"title":"linux文件管理","description":"","frontmatter":{"title":"linux文件管理","tags":["linux"],"categories":"linux","abbrlink":"3fd89380"},"headers":[],"relativePath":"main/Linux/Linux文件及目录.md","filePath":"main/Linux/Linux文件及目录.md","lastUpdated":1662368311000}'),t={name:"main/Linux/Linux文件及目录.md"};function i(r,a,l,o,c,d){return p(),n("div",null,a[0]||(a[0]=[s(`<h2 id="文件操作" tabindex="-1">文件操作 <a class="header-anchor" href="#文件操作" aria-label="Permalink to &quot;文件操作&quot;">​</a></h2><p>这里附上Linux的文件目录</p><p><img src="https://images.wupeiyao.top/notes/20210515162123.png" alt=""></p><h3 id="文件" tabindex="-1">文件 <a class="header-anchor" href="#文件" aria-label="Permalink to &quot;文件&quot;">​</a></h3><p>​ 创建文本文件 touch abc.txt</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>如果再次使用touch abc.txt的话，只会更改时间戳，并不会更改文件内容</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>​ **(常用)**查看文本内容 vi abc</p><p>​ **(常用)**查看文件或文件夹信息(存储，时间) stat abc.txt</p><p>​ <strong>(常用)<strong>在当前目录里执行可执行文件,需要添加一个路径</strong>./</strong></p><h3 id="创建目录-文件夹" tabindex="-1">创建目录（文件夹） <a class="header-anchor" href="#创建目录-文件夹" aria-label="Permalink to &quot;创建目录（文件夹）&quot;">​</a></h3><p>​ **(常用)**创建一个目录：mkdir 123</p><p>​ 同时创建多个目录：mkdir 123 321</p><p>​ **(常用)**创建其他文件夹下的文件夹：mkdir 123/abc</p><p>​ **(常用)**创建一个目录树：mkdir -p /123/abc/321</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>如果你已经用touch 命令创建了一个文件，你再使用mkdir创建同名的文件夹时，系统会报错，这是因为，Linux中，一切皆为文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="删除文件" tabindex="-1">删除文件 <a class="header-anchor" href="#删除文件" aria-label="Permalink to &quot;删除文件&quot;">​</a></h3><p>递归删除文件夹及其文件 rm -r /123 （它会提示你的操作）</p><p><strong>(常用)</strong> 强制删除文件 rm -f 321 (只能删除文件)</p><p><strong>(常用)</strong>(删除本目录下文件夹及其文件) rm -rf 123 （强制删除，没有提示）</p><h3 id="查找文件" tabindex="-1">查找文件 <a class="header-anchor" href="#查找文件" aria-label="Permalink to &quot;查找文件&quot;">​</a></h3><p>find / -name 文件名 （从本目录开始搜索）</p><h3 id="复制文件" tabindex="-1">复制文件 <a class="header-anchor" href="#复制文件" aria-label="Permalink to &quot;复制文件&quot;">​</a></h3><p>cp /321/adc.txt /123</p><p>将321文件夹下的abc 复制到 123文件夹下</p><h3 id="复制文件夹" tabindex="-1">复制文件夹 <a class="header-anchor" href="#复制文件夹" aria-label="Permalink to &quot;复制文件夹&quot;">​</a></h3><p>cp -r 123 321</p><p>将123文件夹复制到321下</p><p>cp -r 123/. 321</p><p>将123文件夹下的内容复制到321下</p><h3 id="移动文件夹" tabindex="-1">移动文件夹 <a class="header-anchor" href="#移动文件夹" aria-label="Permalink to &quot;移动文件夹&quot;">​</a></h3><p>重命名 mv ccc.txt 111.txt</p><p>将ccc改为111</p><p>移动 mv 321/abc.txt 123/ccc.txt (移动可重命名)</p><h3 id="打印文件内容" tabindex="-1">打印文件内容 <a class="header-anchor" href="#打印文件内容" aria-label="Permalink to &quot;打印文件内容&quot;">​</a></h3><p>cat abc.txt</p><h3 id="颜色区别" tabindex="-1">颜色区别 <a class="header-anchor" href="#颜色区别" aria-label="Permalink to &quot;颜色区别&quot;">​</a></h3><p>白色 表示是文件 ，例如txt等文件，</p><p>蓝色表示目录(文件夹)</p><p>绿色表示可执行文件</p><p>红色表示压缩文件</p><p>浅蓝色表示链接文件</p><p>灰色表示其他文件</p><p>红色闪烁表示链接文件有问题</p><p>黄色是设备文件</p><h2 id="linux其他命令" tabindex="-1">Linux其他命令 <a class="header-anchor" href="#linux其他命令" aria-label="Permalink to &quot;Linux其他命令&quot;">​</a></h2><p>[root@192 321]#</p><p>root: 表示登录的用户名</p><p>321：表示当前路径</p><p>#：表示是管理员</p><p>$：表示是普通用户</p><p>cd ：表示进入指令</p><p>[root@192 /] /：表示根目录</p><p>pwd：显示当前目录</p><p>shutdown:关机</p><p>reboot：重启</p><p>ls：展示当前目录下的内容</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>参数：-a:显示所有文件</span></span>
<span class="line"><span>   -l:以长格式输出</span></span>
<span class="line"><span>   -s：按文件大小进行排序</span></span>
<span class="line"><span>   -h 以MG形式显示，通常是和l一起用</span></span>
<span class="line"><span>注意：参数可以混合使用，更多的参数可查看ls --help，大都数指令都可以查看帮助</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>ll ：以长格式输出，包含隐藏文件</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>参数 -h 以K M G显示文件 #注意ll -h并不能用来查看文件夹大小，它不能查看文件夹里的子目录下的文件大小，只适合查看文件大小</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>]\\</p>`,60)]))}const b=e(t,[["render",i]]);export{u as __pageData,b as default};
