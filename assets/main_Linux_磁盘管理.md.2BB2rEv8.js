import{_ as s,c as n,o as e,ag as p}from"./chunks/framework.CDhRSyRB.js";const u=JSON.parse('{"title":"linux磁盘管理","description":"","frontmatter":{"title":"linux磁盘管理","tags":["linux"],"categories":"linux","abbrlink":"af2754a4"},"headers":[],"relativePath":"main/Linux/磁盘管理.md","filePath":"main/Linux/磁盘管理.md","lastUpdated":1662368311000}'),l={name:"main/Linux/磁盘管理.md"};function i(r,a,t,c,d,b){return e(),n("div",null,a[0]||(a[0]=[p(`<p>附上Linux 的文件目录</p><p>/dev</p><p>这个目录放的是一些驱动，【打印机驱动，磁盘驱动，usb驱动】</p><h3 id="查看磁盘容量-df" tabindex="-1">查看磁盘容量（df） <a class="header-anchor" href="#查看磁盘容量-df" aria-label="Permalink to &quot;查看磁盘容量（df）&quot;">​</a></h3><p>#参数</p><p>-h 以k M G显示</p><h3 id="查看目录容量-du" tabindex="-1">查看目录容量 （du） <a class="header-anchor" href="#查看目录容量-du" aria-label="Permalink to &quot;查看目录容量 （du）&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>常用于查看文件夹大小，文件大小可以使用ll -h</span></span>
<span class="line"><span>#参数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-h 以K M G方式显示</span></span>
<span class="line"><span>-d 查看目录深度 参数以0开始 ，0对照1级目录 以此类推</span></span>
<span class="line"><span>比如 du -h -d 1 ~</span></span>
<span class="line"><span>-a 查看目录中的所有文件大小</span></span>
<span class="line"><span>-s 显示总占用容量，而不列出子目录下的文件占用量</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="dd命令" tabindex="-1">dd命令 <a class="header-anchor" href="#dd命令" aria-label="Permalink to &quot;dd命令&quot;">​</a></h2><p>dd用于复制文件并对源文件的内容进行格式化，编译转换，文件操作，与cp命令不同</p><p>dd应用于底层操作，应用场景，系统备份</p><p>输出--》输出 源文件--》新文件</p><h3 id="读取用户输出-输出到文件中" tabindex="-1">读取用户输出，输出到文件中 <a class="header-anchor" href="#读取用户输出-输出到文件中" aria-label="Permalink to &quot;读取用户输出，输出到文件中&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dd of=outputfile count=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#是从命令行获取内容，然后输出到文件中</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="复制文件数据" tabindex="-1">复制文件数据 <a class="header-anchor" href="#复制文件数据" aria-label="Permalink to &quot;复制文件数据&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dd if=abc of=outfile bs=20 count=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span># count是输出的次数</span></span>
<span class="line"><span>#bs 是一次输出的字节数，默认是字节，可以自己添加单位</span></span>
<span class="line"><span>#conv 编码格式 ：</span></span>
<span class="line"><span>			ascil 从ebcdic 改为ASCII</span></span>
<span class="line"><span>			ebcdic 从ASCII 改为ebcdic</span></span>
<span class="line"><span>			lcase 大写转小写</span></span>
<span class="line"><span>			ucase 小写转大写</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="创建虚拟磁盘镜像" tabindex="-1">创建虚拟磁盘镜像 <a class="header-anchor" href="#创建虚拟磁盘镜像" aria-label="Permalink to &quot;创建虚拟磁盘镜像&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dd if=/dev/zero of=zzz bs=1M count=512</span></span>
<span class="line"><span></span></span>
<span class="line"><span>zero 是一个空文件 复制到zzz文件时，会不断返回\\0值字节返回给zzz文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="磁盘格式化-mkfs" tabindex="-1">磁盘格式化（mkfs） <a class="header-anchor" href="#磁盘格式化-mkfs" aria-label="Permalink to &quot;磁盘格式化（mkfs）&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#格式：</span></span>
<span class="line"><span>	mkfs.ext4 文件名</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ext4时文件系统 ，时继ext3的后继版本</span></span>
<span class="line"><span>ext3文件系统容量32TB 2TB文件容量</span></span>
<span class="line"><span>ext4文件系统容量1EB  16TB文件容量</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="磁盘挂载" tabindex="-1">磁盘挂载 <a class="header-anchor" href="#磁盘挂载" aria-label="Permalink to &quot;磁盘挂载&quot;">​</a></h3><p>可使用mount 查看当前挂载情况</p><h4 id="手动挂载" tabindex="-1">手动挂载 <a class="header-anchor" href="#手动挂载" aria-label="Permalink to &quot;手动挂载&quot;">​</a></h4><p>必须挂载到一个空目录下</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>语句：</span></span>
<span class="line"><span>mount 设备名(加绝对路径) 目录(挂载的目录)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#注意，不要用原有的目录</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="自动挂载" tabindex="-1">自动挂载 <a class="header-anchor" href="#自动挂载" aria-label="Permalink to &quot;自动挂载&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>语句：</span></span>
<span class="line"><span>mount -a</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="取消挂载" tabindex="-1">取消挂载 <a class="header-anchor" href="#取消挂载" aria-label="Permalink to &quot;取消挂载&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>语句：</span></span>
<span class="line"><span>unmount 设备名或者挂载目录</span></span>
<span class="line"><span></span></span>
<span class="line"><span>如果出现以下信息</span></span>
<span class="line"><span>umount: /cdrom: target is busy.</span></span>
<span class="line"><span>        (In some cases useful info about processes that 		use  the device is found by lsof(8) or fuser(1))</span></span>
<span class="line"><span>则说明设备正在使用</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="新增磁盘" tabindex="-1">新增磁盘 <a class="header-anchor" href="#新增磁盘" aria-label="Permalink to &quot;新增磁盘&quot;">​</a></h4><p>新增磁盘后需要重启Linux后使用 lsblk 命令查看磁盘挂载情况</p><p>使用fdisk -l</p><p>​ 可查看磁盘的详细信息</p><h5 id="分区" tabindex="-1">分区 <a class="header-anchor" href="#分区" aria-label="Permalink to &quot;分区&quot;">​</a></h5><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fdisk 磁盘名(要添加绝对路径)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>分区 主要有主分区和扩展分区</p><p>而扩展分区则不能直接使用，无法格式化，但是扩展分区可分成逻辑分区，逻辑分区则可以实现格式化</p><p>首先输入n新增分区，然后选择主分区 p 或者，扩展分区 e，逻辑分区 l</p><p>选择分区号时，没有特殊要求直接回车，默认分区号，扇区选择默认</p><p>容量可自己选择，或者使用默认值。</p><p>之后可输入指令 p 查看分区表</p><p>然后保存退出分区 w</p><p>最后查看下磁盘设备</p><h5 id="格式化" tabindex="-1">格式化 <a class="header-anchor" href="#格式化" aria-label="Permalink to &quot;格式化&quot;">​</a></h5><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>使用 mkfs.ext4 磁盘路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="临时-挂载" tabindex="-1">(临时)挂载 <a class="header-anchor" href="#临时-挂载" aria-label="Permalink to &quot;(临时)挂载&quot;">​</a></h5><p>1.创建目录</p><p>2.使用mount 挂载语句（参考上方）</p><h5 id="实现永久挂载" tabindex="-1">实现永久挂载 <a class="header-anchor" href="#实现永久挂载" aria-label="Permalink to &quot;实现永久挂载&quot;">​</a></h5><p>1.重新手动挂载分区到指定的位置</p><p>2.修改文件 /etc/fstab</p><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h4><p>写入之后，重启Linux，即可</p>`,53)]))}const h=s(l,[["render",i]]);export{u as __pageData,h as default};
